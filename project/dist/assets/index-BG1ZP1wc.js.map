{"version":3,"file":"index-BG1ZP1wc.js","sources":["../../node_modules/react-dom/client.js","../../src/lib/supabase.ts","../../src/lib/auth.tsx","../../src/lib/api/users.ts","../../src/lib/api/notifications.ts","../../src/lib/utils.ts","../../src/components/notifications/NotificationDropdown.tsx","../../src/components/layout/Header.tsx","../../src/components/layout/Footer.tsx","../../src/lib/api/ideas.ts","../../src/pages/HomePage.tsx","../../src/lib/api/votes.ts","../../src/lib/api/comments.ts","../../src/pages/BrowseIdeasPage.tsx","../../src/pages/MyIdeasPage.tsx","../../src/pages/SubmitIdeaPage.tsx","../../src/components/admin/Analytics.tsx","../../src/components/admin/UserManagement.tsx","../../src/lib/api/beans.ts","../../src/components/admin/IdeaManagement.tsx","../../src/components/admin/IdeaImport.tsx","../../src/pages/AdminPage.tsx","../../src/lib/avatars.ts","../../src/components/profile/AvatarSelector.tsx","../../src/pages/ProfilePage.tsx","../../src/pages/FAQPage.tsx","../../src/pages/ContactPage.tsx","../../src/pages/auth/LoginPage.tsx","../../src/pages/auth/RegisterPage.tsx","../../src/pages/LeaderboardPage.tsx","../../src/App.tsx","../../src/main.tsx"],"sourcesContent":["'use strict';\n\nvar m = require('react-dom');\nif (process.env.NODE_ENV === 'production') {\n  exports.createRoot = m.createRoot;\n  exports.hydrateRoot = m.hydrateRoot;\n} else {\n  var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n  exports.createRoot = function(c, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.createRoot(c, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n  exports.hydrateRoot = function(c, h, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.hydrateRoot(c, h, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n}\n","import { createClient } from '@supabase/supabase-js';\nimport { Database } from './database.types';\n\nconst supabaseUrl = import.meta.env.VITE_SUPABASE_URL;\nconst supabaseAnonKey = import.meta.env.VITE_SUPABASE_ANON_KEY;\n\nif (!supabaseUrl || !supabaseAnonKey) {\n  throw new Error('Missing Supabase environment variables');\n}\n\nexport const supabase = createClient<Database>(supabaseUrl, supabaseAnonKey);","import { createContext, useContext, useEffect, useState } from 'react';\nimport { User } from '@supabase/supabase-js';\nimport { supabase } from './supabase';\n\ninterface AuthContextType {\n  user: User | null;\n  loading: boolean;\n  signIn: (email: string, password: string) => Promise<void>;\n  signUp: (email: string, password: string) => Promise<void>;\n  signOut: () => Promise<void>;\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\nexport function AuthProvider({ children }: { children: React.ReactNode }) {\n  const [user, setUser] = useState<User | null>(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    // Check active sessions and sets the user\n    supabase.auth.getSession().then(({ data: { session } }) => {\n      setUser(session?.user ?? null);\n      setLoading(false);\n    });\n\n    // Listen for changes on auth state\n    const { data: { subscription } } = supabase.auth.onAuthStateChange((_event, session) => {\n      setUser(session?.user ?? null);\n    });\n\n    return () => subscription.unsubscribe();\n  }, []);\n\n  const signIn = async (email: string, password: string) => {\n    const { error } = await supabase.auth.signInWithPassword({ email, password });\n    if (error) throw error;\n  };\n\n  const signUp = async (email: string, password: string) => {\n    const { error } = await supabase.auth.signUp({ email, password });\n    if (error) throw error;\n  };\n\n  const signOut = async () => {\n    const { error } = await supabase.auth.signOut();\n    if (error) throw error;\n  };\n\n  return (\n    <AuthContext.Provider value={{ user, loading, signIn, signUp, signOut }}>\n      {children}\n    </AuthContext.Provider>\n  );\n}\n\nexport function useAuth() {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n}","import { useQuery, useMutation, useQueryClient } from '@tanstack/react-query';\nimport { supabase } from '../supabase';\nimport { Database } from '../database.types';\n\ntype Profile = Database['public']['Tables']['profiles']['Row'];\ntype ProfileUpdate = Database['public']['Tables']['profiles']['Update'];\n\nexport function useProfile(userId: string) {\n  return useQuery({\n    queryKey: ['profile', userId],\n    queryFn: async () => {\n      const { data, error } = await supabase\n        .from('profiles')\n        .select('*')\n        .eq('id', userId)\n        .single();\n\n      if (error) {\n        // If profile doesn't exist, create it\n        if (error.code === 'PGRST116') {\n          const { data: newProfile, error: createError } = await supabase\n            .from('profiles')\n            .insert({ id: userId })\n            .select()\n            .single();\n\n          if (createError) throw createError;\n          return newProfile;\n        }\n        throw error;\n      }\n\n      return data;\n    },\n    enabled: !!userId,\n  });\n}\n\nexport function useUsers() {\n  return useQuery({\n    queryKey: ['users'],\n    queryFn: async () => {\n      const { data, error } = await supabase\n        .from('profiles')\n        .select(`\n          *,\n          ideas:ideas!ideas_author_id_fkey(count),\n          comments:comments(count)\n        `);\n\n      if (error) throw error;\n      return data;\n    },\n  });\n}\n\nexport function useUpdateUser() {\n  const queryClient = useQueryClient();\n\n  return useMutation({\n    mutationFn: async ({ id, ...updates }: ProfileUpdate & { id: string }) => {\n      const { data, error } = await supabase\n        .from('profiles')\n        .update(updates)\n        .eq('id', id)\n        .select()\n        .single();\n\n      if (error) throw error;\n      return data;\n    },\n    onSuccess: (_, variables) => {\n      queryClient.invalidateQueries({ queryKey: ['users'] });\n      queryClient.invalidateQueries({ queryKey: ['profile', variables.id] });\n    },\n  });\n}","import { useQuery, useMutation, useQueryClient } from '@tanstack/react-query';\nimport { supabase } from '../supabase';\nimport { Database } from '../database.types';\nimport { useAuth } from '../auth';\n\ntype Notification = Database['public']['Tables']['notifications']['Row'];\n\nexport function useNotifications() {\n  const { user } = useAuth();\n\n  return useQuery({\n    queryKey: ['notifications', user?.id],\n    queryFn: async () => {\n      if (!user) return [];\n\n      const { data, error } = await supabase\n        .from('notifications')\n        .select(`\n          *,\n          actor:profiles!actor_id(*),\n          idea:ideas(*)\n        `)\n        .eq('user_id', user.id)\n        .order('created_at', { ascending: false });\n\n      if (error) throw error;\n      return data;\n    },\n    enabled: !!user,\n  });\n}\n\nexport function useMarkNotificationAsRead() {\n  const queryClient = useQueryClient();\n\n  return useMutation({\n    mutationFn: async (notificationId: string) => {\n      const { data, error } = await supabase\n        .from('notifications')\n        .update({ read: true })\n        .eq('id', notificationId)\n        .select()\n        .single();\n\n      if (error) throw error;\n      return data;\n    },\n    onSuccess: (_, variables) => {\n      queryClient.invalidateQueries({ queryKey: ['notifications'] });\n    },\n  });\n}\n\nexport function useMarkAllNotificationsAsRead() {\n  const queryClient = useQueryClient();\n  const { user } = useAuth();\n\n  return useMutation({\n    mutationFn: async () => {\n      if (!user) return;\n\n      const { data, error } = await supabase\n        .from('notifications')\n        .update({ read: true })\n        .eq('user_id', user.id)\n        .select();\n\n      if (error) throw error;\n      return data;\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ['notifications'] });\n    },\n  });\n}","import { type ClassValue, clsx } from 'clsx';\nimport { twMerge } from 'tailwind-merge';\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs));\n}","import React, { useRef, useEffect } from 'react';\nimport { Bell, Check, Loader2, MessageSquare, ThumbsUp, Award, FileCheck, FileX } from 'lucide-react';\nimport { useNotifications, useMarkNotificationAsRead, useMarkAllNotificationsAsRead } from '../../lib/api/notifications';\nimport { cn } from '../../lib/utils';\nimport { Link } from 'react-router-dom';\n\nexport function NotificationDropdown() {\n  const { data: notifications, isLoading } = useNotifications();\n  const { mutate: markAsRead } = useMarkNotificationAsRead();\n  const { mutate: markAllAsRead } = useMarkAllNotificationsAsRead();\n  const [isOpen, setIsOpen] = React.useState(false);\n  const dropdownRef = useRef<HTMLDivElement>(null);\n\n  const unreadCount = notifications?.filter(n => !n.read).length || 0;\n\n  useEffect(() => {\n    function handleClickOutside(event: MouseEvent) {\n      if (dropdownRef.current && !dropdownRef.current.contains(event.target as Node)) {\n        setIsOpen(false);\n      }\n    }\n\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => document.removeEventListener('mousedown', handleClickOutside);\n  }, []);\n\n  const getNotificationIcon = (type: string) => {\n    switch (type) {\n      case 'comment':\n        return <MessageSquare className=\"h-4 w-4 text-blue-500\" />;\n      case 'vote':\n        return <ThumbsUp className=\"h-4 w-4 text-green-500\" />;\n      case 'beans':\n        return <Award className=\"h-4 w-4 text-yellow-500\" />;\n      case 'approved':\n        return <FileCheck className=\"h-4 w-4 text-green-500\" />;\n      case 'rejected':\n        return <FileX className=\"h-4 w-4 text-red-500\" />;\n      default:\n        return <Bell className=\"h-4 w-4 text-gray-500\" />;\n    }\n  };\n\n  const handleNotificationClick = (notificationId: string) => {\n    markAsRead(notificationId);\n    setIsOpen(false);\n  };\n\n  return (\n    <div className=\"relative\" ref={dropdownRef}>\n      <button\n        onClick={() => setIsOpen(!isOpen)}\n        className=\"relative p-2 text-gray-400 hover:text-gray-500 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2 rounded-full hover:bg-gray-100 transition-colors\"\n      >\n        <Bell className=\"h-6 w-6\" />\n        {unreadCount > 0 && (\n          <span className=\"absolute -top-1 -right-1 flex h-5 w-5 items-center justify-center rounded-full bg-red-500 text-xs text-white animate-pulse\">\n            {unreadCount}\n          </span>\n        )}\n      </button>\n\n      {isOpen && (\n        <div className=\"absolute right-0 mt-2 w-80 rounded-lg bg-white shadow-xl ring-1 ring-black ring-opacity-5 z-50 transform transition-all duration-200 origin-top-right\">\n          <div className=\"p-4\">\n            <div className=\"flex items-center justify-between mb-4\">\n              <h3 className=\"text-lg font-medium text-gray-900\">Notifications</h3>\n              {unreadCount > 0 && (\n                <button\n                  onClick={() => markAllAsRead()}\n                  className=\"text-sm text-indigo-600 hover:text-indigo-500 flex items-center hover:bg-indigo-50 px-2 py-1 rounded-md transition-colors\"\n                >\n                  <Check className=\"h-4 w-4 mr-1\" />\n                  Mark all as read\n                </button>\n              )}\n            </div>\n\n            {isLoading ? (\n              <div className=\"flex justify-center py-4\">\n                <Loader2 className=\"h-6 w-6 animate-spin text-indigo-600\" />\n              </div>\n            ) : notifications?.length ? (\n              <div className=\"space-y-2 max-h-[calc(100vh-200px)] overflow-y-auto custom-scrollbar\">\n                {notifications.map((notification) => (\n                  <Link\n                    key={notification.id}\n                    to={`/my-ideas`}\n                    onClick={() => handleNotificationClick(notification.id)}\n                    className={cn(\n                      \"block p-3 rounded-lg transition-all duration-200 hover:transform hover:scale-[1.02]\",\n                      notification.read ? \"bg-white hover:bg-gray-50\" : \"bg-indigo-50 hover:bg-indigo-100\",\n                      \"border border-gray-100 hover:shadow-md\"\n                    )}\n                  >\n                    <div className=\"flex items-start\">\n                      <div className=\"flex-shrink-0\">\n                        {getNotificationIcon(notification.type)}\n                      </div>\n                      <div className=\"ml-3 flex-1\">\n                        <p className=\"text-sm text-gray-900\">\n                          <span className=\"font-medium\">{notification.actor?.full_name || 'Someone'}</span>\n                          {' '}\n                          {notification.content}\n                        </p>\n                        <p className=\"mt-1 text-xs text-gray-500\">\n                          {new Date(notification.created_at).toLocaleDateString(undefined, {\n                            year: 'numeric',\n                            month: 'short',\n                            day: 'numeric',\n                            hour: '2-digit',\n                            minute: '2-digit'\n                          })}\n                        </p>\n                      </div>\n                      {!notification.read && (\n                        <div className=\"ml-2 flex-shrink-0\">\n                          <div className=\"h-2 w-2 rounded-full bg-indigo-600\"></div>\n                        </div>\n                      )}\n                    </div>\n                  </Link>\n                ))}\n              </div>\n            ) : (\n              <div className=\"text-center py-6\">\n                <Bell className=\"h-8 w-8 text-gray-400 mx-auto mb-2\" />\n                <p className=\"text-gray-500\">No notifications yet</p>\n              </div>\n            )}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}","import React, { useState, useEffect } from 'react';\nimport { Link, useLocation, useNavigate } from 'react-router-dom';\nimport { Lightbulb, Menu, X, Plus, Sparkles, Shield, UserCircle, LogOut, LogIn, Trophy } from 'lucide-react';\nimport { useAuth } from '../../lib/auth';\nimport { useProfile } from '../../lib/api/users';\nimport { NotificationDropdown } from '../notifications/NotificationDropdown';\nimport { cn } from '../../lib/utils';\n\ninterface HeaderProps {\n  showAdminLink?: boolean;\n}\n\nexport function Header({ showAdminLink = false }: HeaderProps) {\n  const location = useLocation();\n  const navigate = useNavigate();\n  const [isOpen, setIsOpen] = useState(false);\n  const [showProfileMenu, setShowProfileMenu] = useState(false);\n  const [scrolled, setScrolled] = useState(false);\n  const { user, signOut } = useAuth();\n  const { data: profile } = useProfile(user?.id || '');\n  const isAdmin = user?.email?.endsWith('@kipi.ai');\n\n  const navigation = [\n    { name: 'Home', href: '/', emoji: '🏠' },\n    { name: 'FAQ', href: '/faq', emoji: '❓' },\n    { name: 'Contact', href: '/contact', emoji: '📧' },\n  ];\n\n  const authenticatedNavigation = [\n    { name: 'Leaderboard', href: '/leaderboard', emoji: '🏆' },\n    { name: 'Browse Ideas', href: '/browse', emoji: '🔍' },\n    { name: 'My Ideas', href: '/my-ideas', emoji: '💡' },\n  ];\n\n  const allNavigation = [\n    ...navigation,\n    ...(user ? authenticatedNavigation : []),\n    ...(showAdminLink ? [{ name: 'Admin', href: '/admin', emoji: '🛡️' }] : [])\n  ];\n\n  useEffect(() => {\n    const handleScroll = () => {\n      setScrolled(window.scrollY > 10);\n    };\n\n    window.addEventListener('scroll', handleScroll);\n    return () => window.removeEventListener('scroll', handleScroll);\n  }, []);\n\n  // Close mobile menu when route changes\n  useEffect(() => {\n    setIsOpen(false);\n  }, [location.pathname]);\n\n  const handleLogout = async () => {\n    try {\n      await signOut();\n      navigate('/');\n    } catch (error) {\n      console.error('Error signing out:', error);\n    }\n  };\n\n  return (\n    <header \n      className={cn(\n        \"sticky top-0 z-50 transition-all duration-300\",\n        scrolled \n          ? \"bg-white/80 backdrop-blur-md shadow-md\" \n          : \"bg-white shadow-sm\"\n      )}\n    >\n      <nav className=\"mx-auto max-w-7xl px-4 sm:px-6 lg:px-8\" aria-label=\"Top\">\n        <div className=\"flex h-16 items-center justify-between\">\n          {/* Logo */}\n          <div className=\"flex items-center\">\n            <Link \n              to=\"/\" \n              className=\"flex items-center group transition-transform duration-300 hover:scale-105\"\n              onClick={() => setIsOpen(false)}\n            >\n              <div className=\"relative\">\n                <Lightbulb className=\"h-8 w-8 text-indigo-600 transition-all duration-500 group-hover:text-yellow-500\" />\n                <Sparkles className=\"absolute -top-1 -right-1 h-4 w-4 text-yellow-400 opacity-0 group-hover:opacity-100 transition-all duration-300\" />\n              </div>\n              <div className=\"ml-2 flex flex-col\">\n                <span className=\"text-xl font-bold bg-gradient-to-r from-indigo-600 to-blue-500 bg-clip-text text-transparent\">\n                  Kipi\n                </span>\n                <span className=\"text-sm font-medium text-gray-600 -mt-1\">\n                  Innovate\n                </span>\n              </div>\n            </Link>\n          </div>\n\n          {/* Mobile menu button */}\n          <div className=\"flex items-center md:hidden\">\n            {user && <NotificationDropdown />}\n            <button\n              type=\"button\"\n              onClick={() => setIsOpen(!isOpen)}\n              className=\"ml-2 inline-flex items-center justify-center p-2 rounded-md text-gray-400 hover:text-gray-500 hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-indigo-500\"\n            >\n              <span className=\"sr-only\">Open main menu</span>\n              {isOpen ? (\n                <X className=\"block h-6 w-6\" />\n              ) : (\n                <Menu className=\"block h-6 w-6\" />\n              )}\n            </button>\n          </div>\n\n          {/* Desktop navigation */}\n          <div className=\"hidden md:flex md:items-center md:space-x-6\">\n            {allNavigation.map((item) => (\n              <Link\n                key={item.name}\n                to={item.href}\n                className={cn(\n                  \"relative text-sm font-medium transition-all duration-300 hover:scale-105 flex items-center space-x-1 py-2\",\n                  location.pathname === item.href\n                    ? \"text-indigo-600 after:absolute after:bottom-0 after:left-0 after:right-0 after:h-0.5 after:bg-indigo-600 after:transform after:scale-x-100 after:transition-transform\"\n                    : \"text-gray-500 hover:text-gray-900 after:absolute after:bottom-0 after:left-0 after:right-0 after:h-0.5 after:bg-indigo-600 after:transform after:scale-x-0 hover:after:scale-x-100 after:transition-transform\"\n                )}\n              >\n                <span>{item.emoji}</span>\n                <span>{item.name}</span>\n              </Link>\n            ))}\n            {user && !isAdmin && (\n              <Link\n                to=\"/submit\"\n                className=\"inline-flex items-center px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 transition-all duration-300 hover:scale-105 hover:shadow-lg\"\n              >\n                <Plus className=\"h-4 w-4 mr-1\" />\n                Submit Idea ✨\n              </Link>\n            )}\n            {user && (\n              <NotificationDropdown />\n            )}\n            <div className=\"relative\">\n              <button\n                onClick={() => setShowProfileMenu(!showProfileMenu)}\n                className=\"inline-flex items-center text-gray-500 hover:text-gray-900 transition-all duration-300 hover:scale-105 p-1 rounded-full hover:bg-gray-100\"\n              >\n                {profile?.avatar_url ? (\n                  <img\n                    src={profile.avatar_url}\n                    alt=\"Profile\"\n                    className=\"h-8 w-8 rounded-full object-cover\"\n                  />\n                ) : (\n                  <UserCircle className=\"h-8 w-8\" />\n                )}\n              </button>\n              {showProfileMenu && (\n                <div className=\"absolute right-0 mt-2 w-48 rounded-lg shadow-lg bg-white ring-1 ring-black ring-opacity-5 py-1 focus:outline-none transform transition-all duration-200 origin-top-right\">\n                  {user ? (\n                    <>\n                      <div className=\"px-4 py-2 border-b border-gray-100\">\n                        <p className=\"text-sm font-medium text-gray-900 truncate\">\n                          {user.email}\n                        </p>\n                      </div>\n                      <Link\n                        to=\"/profile\"\n                        className=\"block px-4 py-2 text-sm text-gray-700 hover:bg-gray-50 transition-colors\"\n                        onClick={() => setShowProfileMenu(false)}\n                      >\n                        <div className=\"flex items-center\">\n                          <UserCircle className=\"h-4 w-4 mr-2\" />\n                          Profile Settings\n                        </div>\n                      </Link>\n                      <button\n                        onClick={() => {\n                          setShowProfileMenu(false);\n                          handleLogout();\n                        }}\n                        className=\"block w-full text-left px-4 py-2 text-sm text-red-600 hover:bg-gray-50 transition-colors\"\n                      >\n                        <div className=\"flex items-center\">\n                          <LogOut className=\"h-4 w-4 mr-2\" />\n                          Sign Out\n                        </div>\n                      </button>\n                    </>\n                  ) : (\n                    <>\n                      <Link\n                        to=\"/login\"\n                        className=\"block px-4 py-2 text-sm text-indigo-600 hover:bg-gray-50 transition-colors\"\n                        onClick={() => setShowProfileMenu(false)}\n                      >\n                        <div className=\"flex items-center\">\n                          <LogIn className=\"h-4 w-4 mr-2\" />\n                          Sign In\n                        </div>\n                      </Link>\n                      <Link\n                        to=\"/register\"\n                        className=\"block px-4 py-2 text-sm text-gray-700 hover:bg-gray-50 transition-colors\"\n                        onClick={() => setShowProfileMenu(false)}\n                      >\n                        <div className=\"flex items-center\">\n                          <UserCircle className=\"h-4 w-4 mr-2\" />\n                          Create Account\n                        </div>\n                      </Link>\n                    </>\n                  )}\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n\n        {/* Mobile menu */}\n        <div\n          className={cn(\n            \"absolute left-0 right-0 top-16 z-50 transform transition-all duration-300 ease-in-out md:hidden\",\n            isOpen ? \"translate-y-0 opacity-100\" : \"-translate-y-2 opacity-0 pointer-events-none\",\n            \"bg-white border-b border-gray-200 shadow-lg\"\n          )}\n        >\n          <div className=\"max-h-[calc(100vh-4rem)] overflow-y-auto\">\n            {/* User info for mobile */}\n            {user && (\n              <div className=\"px-4 py-3 border-b border-gray-200\">\n                <div className=\"flex items-center\">\n                  <div className=\"flex-shrink-0\">\n                    {profile?.avatar_url ? (\n                      <img\n                        src={profile.avatar_url}\n                        alt=\"Profile\"\n                        className=\"h-10 w-10 rounded-full object-cover\"\n                      />\n                    ) : (\n                      <UserCircle className=\"h-10 w-10 text-gray-400\" />\n                    )}\n                  </div>\n                  <div className=\"ml-3\">\n                    <div className=\"text-base font-medium text-gray-800 truncate\">\n                      {user.email}\n                    </div>\n                  </div>\n                </div>\n              </div>\n            )}\n\n            {/* Navigation items */}\n            <div className=\"px-4 py-3\">\n              <div className=\"grid gap-2\">\n                {allNavigation.map((item) => (\n                  <Link\n                    key={item.name}\n                    to={item.href}\n                    className={cn(\n                      \"flex items-center px-3 py-2 rounded-md text-base font-medium transition-colors duration-300\",\n                      location.pathname === item.href\n                        ? \"bg-indigo-50 text-indigo-600\"\n                        : \"text-gray-500 hover:bg-gray-50 hover:text-gray-900\"\n                    )}\n                    onClick={() => setIsOpen(false)}\n                  >\n                    <span className=\"mr-3\">{item.emoji}</span>\n                    <span>{item.name}</span>\n                  </Link>\n                ))}\n              </div>\n            </div>\n\n            {/* Action buttons for mobile */}\n            <div className=\"px-4 py-3 border-t border-gray-200\">\n              {user ? (\n                <div className=\"space-y-2\">\n                  {!isAdmin && (\n                    <Link\n                      to=\"/submit\"\n                      className=\"flex items-center justify-center w-full px-3 py-2 rounded-md text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 transition-colors\"\n                      onClick={() => setIsOpen(false)}\n                    >\n                      <Plus className=\"h-4 w-4 mr-2\" />\n                      Submit Idea ✨\n                    </Link>\n                  )}\n                  <Link\n                    to=\"/profile\"\n                    className=\"flex items-center w-full px-3 py-2 rounded-md text-sm font-medium text-gray-700 hover:bg-gray-50 transition-colors\"\n                    onClick={() => setIsOpen(false)}\n                  >\n                    <UserCircle className=\"h-4 w-4 mr-2\" />\n                    Profile Settings\n                  </Link>\n                  <button\n                    onClick={() => {\n                      setIsOpen(false);\n                      handleLogout();\n                    }}\n                    className=\"flex items-center w-full px-3 py-2 rounded-md text-sm font-medium text-red-600 hover:bg-gray-50 transition-colors\"\n                  >\n                    <LogOut className=\"h-4 w-4 mr-2\" />\n                    Sign Out\n                  </button>\n                </div>\n              ) : (\n                <div className=\"space-y-2\">\n                  <Link\n                    to=\"/login\"\n                    className=\"flex items-center justify-center w-full px-3 py-2 rounded-md text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 transition-colors\"\n                    onClick={() => setIsOpen(false)}\n                  >\n                    <LogIn className=\"h-4 w-4 mr-2\" />\n                    Sign In\n                  </Link>\n                  <Link\n                    to=\"/register\"\n                    className=\"flex items-center justify-center w-full px-3 py-2 rounded-md text-sm font-medium text-gray-700 hover:bg-gray-50 transition-colors\"\n                    onClick={() => setIsOpen(false)}\n                  >\n                    <UserCircle className=\"h-4 w-4 mr-2\" />\n                    Create Account\n                  </Link>\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      </nav>\n    </header>\n  );\n}","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Lightbulb } from 'lucide-react';\n\nexport function Footer() {\n  return (\n    <footer className=\"bg-white\">\n      <div className=\"mx-auto max-w-7xl px-4 sm:px-6 lg:px-8\">\n        <div className=\"py-12 md:flex md:items-center md:justify-between\">\n          <div className=\"flex justify-center space-x-6 md:order-2\">\n            <Link to=\"/faq\" className=\"text-gray-400 hover:text-gray-500\">\n              FAQ\n            </Link>\n            <Link to=\"/contact\" className=\"text-gray-400 hover:text-gray-500\">\n              Contact\n            </Link>\n          </div>\n          <div className=\"mt-8 md:mt-0 md:order-1\">\n            <div className=\"flex items-center justify-center\">\n              <Lightbulb className=\"h-6 w-6 text-indigo-600\" />\n              <p className=\"ml-2 text-center text-base text-gray-400\">\n                &copy; {new Date().getFullYear()} Kipi Innovate. All rights reserved.\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </footer>\n  );\n}","import { useMutation, useQuery, useQueryClient, UseQueryOptions } from '@tanstack/react-query';\nimport { supabase } from '../supabase';\nimport { Database } from '../database.types';\n\ntype Idea = Database['public']['Tables']['ideas']['Row'];\ntype NewIdea = Database['public']['Tables']['ideas']['Insert'];\ntype IdeaEditLog = Database['public']['Tables']['idea_edit_logs']['Row'];\n\nconst STALE_TIME = 1000 * 60 * 5; // 5 minutes\nconst CACHE_TIME = 1000 * 60 * 30; // 30 minutes\n\nexport function useIdeas(options?: UseQueryOptions<Idea[]>) {\n  return useQuery({\n    queryKey: ['ideas'],\n    queryFn: async () => {\n      const { data, error } = await supabase\n        .from('ideas')\n        .select(`\n          *,\n          author:profiles!ideas_author_id_fkey(*),\n          feedback_by:profiles!ideas_feedback_by_fkey(*),\n          comments:comments(*),\n          votes:votes(*),\n          contributors:idea_contributors(\n            user_id,\n            profiles:profiles(*)\n          )\n        `)\n        .order('created_at', { ascending: false });\n\n      if (error) throw error;\n      return data;\n    },\n    staleTime: STALE_TIME,\n    cacheTime: CACHE_TIME,\n    ...options,\n  });\n}\n\nexport function useCreateIdea() {\n  const queryClient = useQueryClient();\n\n  return useMutation({\n    mutationFn: async (newIdea: NewIdea) => {\n      const { data, error } = await supabase\n        .from('ideas')\n        .insert(newIdea)\n        .select()\n        .single();\n\n      if (error) throw error;\n      return data;\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ['ideas'] });\n    },\n  });\n}\n\nexport function useUpdateIdea() {\n  const queryClient = useQueryClient();\n\n  return useMutation({\n    mutationFn: async ({ id, ...updates }: Partial<Idea> & { id: string }) => {\n      const { data, error } = await supabase\n        .from('ideas')\n        .update(updates)\n        .eq('id', id)\n        .select()\n        .single();\n\n      if (error) throw error;\n      return data;\n    },\n    onSuccess: (data) => {\n      queryClient.invalidateQueries({ queryKey: ['ideas'] });\n      queryClient.setQueryData(['idea', data.id], data);\n    },\n  });\n}\n\nexport function useEditIdea() {\n  const queryClient = useQueryClient();\n\n  return useMutation({\n    mutationFn: async ({ \n      id, \n      updates, \n      editorId \n    }: { \n      id: string; \n      updates: Partial<Idea>; \n      editorId: string;\n    }) => {\n      // Get the current idea state before update\n      const { data: beforeIdea, error: fetchError } = await supabase\n        .from('ideas')\n        .select()\n        .eq('id', id)\n        .single();\n\n      if (fetchError) throw fetchError;\n\n      // Update the idea\n      const { data: updatedIdea, error: updateError } = await supabase\n        .from('ideas')\n        .update(updates)\n        .eq('id', id)\n        .select()\n        .single();\n\n      if (updateError) throw updateError;\n\n      // Create edit log\n      const { error: logError } = await supabase\n        .from('idea_edit_logs')\n        .insert({\n          idea_id: id,\n          editor_id: editorId,\n          changes: {\n            before: beforeIdea,\n            after: updatedIdea\n          }\n        });\n\n      if (logError) throw logError;\n\n      return updatedIdea;\n    },\n    onSuccess: (data) => {\n      queryClient.invalidateQueries({ queryKey: ['ideas'] });\n      queryClient.invalidateQueries({ queryKey: ['idea', data.id] });\n      queryClient.invalidateQueries({ queryKey: ['idea-edit-logs', data.id] });\n    },\n  });\n}\n\nexport function useIdeaEditLogs(ideaId: string | null) {\n  return useQuery({\n    queryKey: ['idea-edit-logs', ideaId],\n    queryFn: async () => {\n      if (!ideaId) return [];\n\n      const { data, error } = await supabase\n        .from('idea_edit_logs')\n        .select(`\n          *,\n          editor:profiles(*)\n        `)\n        .eq('idea_id', ideaId)\n        .order('created_at', { ascending: false });\n\n      if (error) throw error;\n      return data;\n    },\n    enabled: !!ideaId,\n    staleTime: STALE_TIME,\n    cacheTime: CACHE_TIME,\n  });\n}\n\n// Prefetch ideas for faster navigation\nexport async function prefetchIdeas(queryClient: any) {\n  await queryClient.prefetchQuery({\n    queryKey: ['ideas'],\n    queryFn: async () => {\n      const { data, error } = await supabase\n        .from('ideas')\n        .select(`\n          *,\n          author:profiles!ideas_author_id_fkey(*),\n          feedback_by:profiles!ideas_feedback_by_fkey(*),\n          comments:comments(*),\n          votes:votes(*),\n          contributors:idea_contributors(\n            user_id,\n            profiles:profiles(*)\n          )\n        `)\n        .order('created_at', { ascending: false });\n\n      if (error) throw error;\n      return data;\n    },\n  });\n}","import React from 'react';\nimport { Trophy, Brain, CheckCircle, XCircle, Clock, Bean, Sparkles, ArrowRight, Users, Zap, Target, ClipboardList, Award, Presentation, Medal, TrendingUp, MessageSquare, ThumbsUp } from 'lucide-react';\nimport { Link } from 'react-router-dom';\nimport { useIdeas } from '../lib/api/ideas';\nimport { useAuth } from '../lib/auth';\nimport { cn } from '../lib/utils';\n\nconst benefits = [\n  {\n    icon: Users,\n    title: 'Collaborative Innovation',\n    description: 'Connect with colleagues, share ideas, and build on each other\\'s insights to create breakthrough solutions.'\n  },\n  {\n    icon: Target,\n    title: 'Impact Tracking',\n    description: 'Monitor the implementation and impact of your ideas through our comprehensive tracking system.'\n  },\n  {\n    icon: Bean,\n    title: 'Recognition & Rewards',\n    description: 'Earn beans for your contributions and redeem them for exciting rewards and opportunities.'\n  },\n  {\n    icon: Zap,\n    title: 'Quick Implementation',\n    description: 'See your ideas come to life with our streamlined approval and implementation process.'\n  }\n];\n\nconst evaluationSteps = [\n  {\n    icon: ClipboardList,\n    title: 'Idea Submission',\n    description: 'Submit your innovative ideas through our platform',\n    eta: 'Immediate acknowledgment',\n    outcome: 'Ideas enter evaluation pipeline'\n  },\n  {\n    icon: Brain,\n    title: 'Evaluation',\n    description: 'Ideas are assessed for feasibility and alignment with goals',\n    eta: '7 working days',\n    outcome: 'Clear decision and next steps'\n  },\n  {\n    icon: Zap,\n    title: 'Implementation',\n    description: 'Approved ideas move to execution phase',\n    eta: 'Based on scope',\n    outcome: 'Successfully implemented ideas'\n  },\n  {\n    icon: Presentation,\n    title: 'Jury Review',\n    description: 'Selected ideas presented for final review',\n    eta: '2 weeks',\n    outcome: 'Top ideas selected for recognition'\n  },\n  {\n    icon: Medal,\n    title: 'Recognition',\n    description: 'Winners announced and celebrated',\n    eta: 'Next monthly Townhall',\n    outcome: 'Awards and recognition'\n  }\n];\n\nexport function HomePage() {\n  const { data: ideas } = useIdeas();\n  const { user } = useAuth();\n  const isAdmin = user?.email?.endsWith('@kipi.ai');\n\n  // Enhanced analytics for user ideas\n  const userIdeas = ideas?.filter(idea => idea.author_id === user?.id) || [];\n  \n  const analytics = {\n    total: userIdeas.length,\n    approved: userIdeas.filter(idea => idea.status === 'approved').length,\n    rejected: userIdeas.filter(idea => idea.status === 'rejected').length,\n    pending: userIdeas.filter(idea => idea.status === 'pending').length,\n    totalBeans: userIdeas.reduce((sum, idea) => sum + (idea.beans_earned || 0), 0),\n    totalVotes: userIdeas.reduce((sum, idea) => sum + (idea.votes?.length || 0), 0),\n    totalComments: userIdeas.reduce((sum, idea) => sum + (idea.comments?.length || 0), 0),\n    categoryDistribution: userIdeas.reduce((acc: Record<string, number>, idea) => {\n      acc[idea.category] = (acc[idea.category] || 0) + 1;\n      return acc;\n    }, {}),\n    monthlySubmissions: userIdeas.reduce((acc: Record<string, number>, idea) => {\n      const month = new Date(idea.created_at).toLocaleString('default', { month: 'long' });\n      acc[month] = (acc[month] || 0) + 1;\n      return acc;\n    }, {})\n  };\n\n  const stats = [\n    {\n      name: 'Total Ideas',\n      value: analytics.total,\n      icon: Brain,\n      color: 'from-blue-500 to-blue-600',\n      subtext: 'ideas submitted by you'\n    },\n    {\n      name: 'Ideas Approved',\n      value: analytics.approved,\n      icon: CheckCircle,\n      color: 'from-green-500 to-green-600',\n      subtext: 'of your ideas approved'\n    },\n    {\n      name: 'Ideas Rejected',\n      value: analytics.rejected,\n      icon: XCircle,\n      color: 'from-red-500 to-red-600',\n      subtext: 'of your ideas rejected'\n    },\n    {\n      name: 'Ideas Pending',\n      value: analytics.pending,\n      icon: Clock,\n      color: 'from-yellow-500 to-yellow-600',\n      subtext: 'of your ideas pending'\n    }\n  ];\n\n  const engagementStats = [\n    {\n      name: 'Total Beans',\n      value: analytics.totalBeans,\n      icon: Bean,\n      color: 'from-yellow-500 to-yellow-600',\n      subtext: 'beans earned from ideas'\n    },\n    {\n      name: 'Total Votes',\n      value: analytics.totalVotes,\n      icon: ThumbsUp,\n      color: 'from-indigo-500 to-indigo-600',\n      subtext: 'votes on your ideas'\n    },\n    {\n      name: 'Total Comments',\n      value: analytics.totalComments,\n      icon: MessageSquare,\n      color: 'from-purple-500 to-purple-600',\n      subtext: 'comments on your ideas'\n    },\n    {\n      name: 'Avg. Beans per Idea',\n      value: analytics.total ? (analytics.totalBeans / analytics.total).toFixed(1) : '0',\n      icon: TrendingUp,\n      color: 'from-emerald-500 to-emerald-600',\n      subtext: 'average beans per idea'\n    }\n  ];\n\n  return (\n    <div className=\"py-12\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        {/* Hero Section */}\n        <div className=\"text-center mb-16 animate-float\">\n          <h1 className=\"text-4xl md:text-6xl font-bold mb-6 gradient-text\">\n            Transform Ideas into Impact\n          </h1>\n          <p className=\"text-xl text-gray-600 max-w-2xl mx-auto mb-8\">\n            {user ? (\n              isAdmin ? \n                'Welcome back! Monitor and manage innovation across the organization ✨' :\n                'Welcome back! Track your ideas and their impact ✨'\n            ) : (\n              'Join our community of innovators and shape the future together ✨'\n            )}\n          </p>\n          {!isAdmin && (\n            <Link\n              to=\"/submit\"\n              className=\"inline-flex items-center px-6 py-3 border border-transparent text-base font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 transition-all duration-300 hover:scale-105\"\n            >\n              Share Your Idea\n              <ArrowRight className=\"ml-2 h-5 w-5\" />\n            </Link>\n          )}\n        </div>\n\n        {/* Enhanced Analytics Section - Only show for non-admin logged-in users */}\n        {user && !isAdmin && (\n          <>\n            {/* Primary Stats */}\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8\">\n              {stats.map((stat, index) => {\n                const Icon = stat.icon;\n                return (\n                  <div\n                    key={stat.name}\n                    className=\"glass-effect gradient-border rounded-2xl p-6 card-hover transform transition-all duration-300\"\n                    style={{ animationDelay: `${index * 0.1}s` }}\n                  >\n                    <div className=\"flex items-center\">\n                      <div className=\"flex-shrink-0\">\n                        <div className={`p-3 rounded-xl bg-gradient-to-r ${stat.color} bg-opacity-10`}>\n                          <Icon className=\"h-8 w-8 text-white\" />\n                        </div>\n                      </div>\n                      <div className=\"ml-5 w-0 flex-1\">\n                        <dl>\n                          <dt className=\"text-sm font-medium text-gray-500 truncate\">\n                            {stat.name}\n                          </dt>\n                          <dd className=\"text-3xl font-bold gradient-text\">\n                            {stat.value}\n                          </dd>\n                          <dd className=\"text-sm text-gray-500 mt-1\">\n                            {stat.subtext}\n                          </dd>\n                        </dl>\n                      </div>\n                    </div>\n                  </div>\n                );\n              })}\n            </div>\n\n            {/* Engagement Stats */}\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-16\">\n              {engagementStats.map((stat, index) => {\n                const Icon = stat.icon;\n                return (\n                  <div\n                    key={stat.name}\n                    className=\"glass-effect gradient-border rounded-2xl p-6 card-hover transform transition-all duration-300\"\n                    style={{ animationDelay: `${index * 0.1}s` }}\n                  >\n                    <div className=\"flex items-center\">\n                      <div className=\"flex-shrink-0\">\n                        <div className={`p-3 rounded-xl bg-gradient-to-r ${stat.color} bg-opacity-10`}>\n                          <Icon className=\"h-8 w-8 text-white\" />\n                        </div>\n                      </div>\n                      <div className=\"ml-5 w-0 flex-1\">\n                        <dl>\n                          <dt className=\"text-sm font-medium text-gray-500 truncate\">\n                            {stat.name}\n                          </dt>\n                          <dd className=\"text-3xl font-bold gradient-text\">\n                            {stat.value}\n                          </dd>\n                          <dd className=\"text-sm text-gray-500 mt-1\">\n                            {stat.subtext}\n                          </dd>\n                        </dl>\n                      </div>\n                    </div>\n                  </div>\n                );\n              })}\n            </div>\n          </>\n        )}\n\n        {/* Evaluation Process Section */}\n        <div className=\"mb-16\">\n          <h2 className=\"text-3xl font-bold text-center mb-12 gradient-text\">\n            Our Evaluation Process\n          </h2>\n          <div className=\"grid md:grid-cols-3 lg:grid-cols-5 gap-8\">\n            {evaluationSteps.map((step, index) => {\n              const Icon = step.icon;\n              return (\n                <div\n                  key={step.title}\n                  className=\"glass-effect rounded-2xl p-6 text-center transform transition-all duration-300 hover:scale-105\"\n                  style={{ animationDelay: `${index * 0.15}s` }}\n                >\n                  <div className=\"inline-flex items-center justify-center p-3 rounded-xl bg-indigo-100 text-indigo-600 mb-4\">\n                    <Icon className=\"h-6 w-6\" />\n                  </div>\n                  <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">\n                    {step.title}\n                  </h3>\n                  <p className=\"text-gray-600 mb-4\">\n                    {step.description}\n                  </p>\n                  <div className=\"text-sm\">\n                    <p className=\"text-indigo-600 font-medium\">ETA: {step.eta}</p>\n                    <p className=\"text-gray-500\">Outcome: {step.outcome}</p>\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n        </div>\n\n        {/* Benefits Section */}\n        <div className=\"mb-16\">\n          <h2 className=\"text-3xl font-bold text-center mb-12 gradient-text\">\n            Why Use Kipi Innovate?\n          </h2>\n          <div className=\"grid md:grid-cols-2 lg:grid-cols-4 gap-8\">\n            {benefits.map((benefit, index) => {\n              const Icon = benefit.icon;\n              return (\n                <div\n                  key={benefit.title}\n                  className=\"glass-effect rounded-2xl p-6 text-center transform transition-all duration-300 hover:scale-105\"\n                  style={{ animationDelay: `${index * 0.15}s` }}\n                >\n                  <div className=\"inline-flex items-center justify-center p-3 rounded-xl bg-indigo-100 text-indigo-600 mb-4\">\n                    <Icon className=\"h-6 w-6\" />\n                  </div>\n                  <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">\n                    {benefit.title}\n                  </h3>\n                  <p className=\"text-gray-600\">\n                    {benefit.description}\n                  </p>\n                </div>\n              );\n            })}\n          </div>\n        </div>\n\n        {/* Call to Action */}\n        {!user && (\n          <div className=\"glass-effect gradient-border rounded-2xl p-8 text-center\">\n            <div className=\"max-w-3xl mx-auto\">\n              <Sparkles className=\"h-12 w-12 text-indigo-600 mx-auto mb-6\" />\n              <h3 className=\"text-2xl font-bold mb-4 gradient-text\">\n                Ready to Make a Difference?\n              </h3>\n              <p className=\"text-lg text-gray-600 leading-relaxed mb-8\">\n                Your ideas matter! Join our innovative community and help shape the future of our organization. \n                Start sharing your ideas today and earn recognition for your contributions. \n                🚀 Let's innovate together!\n              </p>\n              <Link\n                to=\"/submit\"\n                className=\"inline-flex items-center px-8 py-4 border border-transparent text-lg font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 transition-all duration-300 hover:scale-105\"\n              >\n                Submit Your First Idea\n                <ArrowRight className=\"ml-2 h-5 w-5\" />\n              </Link>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}","import { useMutation, useQueryClient } from '@tanstack/react-query';\nimport { supabase } from '../supabase';\nimport { Database } from '../database.types';\n\ntype Vote = Database['public']['Tables']['votes']['Row'];\ntype NewVote = Database['public']['Tables']['votes']['Insert'];\n\nexport function useVote() {\n  const queryClient = useQueryClient();\n\n  return useMutation({\n    mutationFn: async (newVote: NewVote) => {\n      // First, check if the vote already exists\n      const { data: existingVote } = await supabase\n        .from('votes')\n        .select()\n        .eq('idea_id', newVote.idea_id)\n        .eq('user_id', newVote.user_id)\n        .maybeSingle();\n\n      // If vote already exists, return early\n      if (existingVote) {\n        return existingVote;\n      }\n\n      // If vote doesn't exist, create it\n      const { data, error } = await supabase\n        .from('votes')\n        .insert(newVote)\n        .select()\n        .single();\n\n      if (error) throw error;\n      return data;\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ['ideas'] });\n    },\n  });\n}\n\nexport function useUnvote() {\n  const queryClient = useQueryClient();\n\n  return useMutation({\n    mutationFn: async ({ ideaId, userId }: { ideaId: string; userId: string }) => {\n      const { error } = await supabase\n        .from('votes')\n        .delete()\n        .eq('idea_id', ideaId)\n        .eq('user_id', userId);\n\n      if (error) throw error;\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ['ideas'] });\n    },\n  });\n}","import { useMutation, useQuery, useQueryClient } from '@tanstack/react-query';\nimport { supabase } from '../supabase';\nimport { Database } from '../database.types';\n\ntype Comment = Database['public']['Tables']['comments']['Row'];\ntype NewComment = Database['public']['Tables']['comments']['Insert'];\n\nexport function useComments(ideaId: string | null) {\n  return useQuery({\n    queryKey: ['comments', ideaId],\n    queryFn: async () => {\n      if (!ideaId) return [];\n      \n      const { data, error } = await supabase\n        .from('comments')\n        .select(`\n          *,\n          author:profiles(*)\n        `)\n        .eq('idea_id', ideaId)\n        .order('created_at', { ascending: true });\n\n      if (error) throw error;\n      return data;\n    },\n    enabled: !!ideaId, // Only run query if ideaId exists\n  });\n}\n\nexport function useCreateComment() {\n  const queryClient = useQueryClient();\n\n  return useMutation({\n    mutationFn: async (newComment: NewComment) => {\n      const { data, error } = await supabase\n        .from('comments')\n        .insert(newComment)\n        .select()\n        .single();\n\n      if (error) throw error;\n      return data;\n    },\n    onSuccess: (_, variables) => {\n      queryClient.invalidateQueries({ \n        queryKey: ['comments', variables.idea_id] \n      });\n    },\n  });\n}","import React, { useState } from 'react';\nimport { Filter, MessageSquare, ThumbsUp, Tag, Search, Loader2, Award, User, Link as LinkIcon, Users } from 'lucide-react';\nimport { cn } from '../lib/utils';\nimport { useIdeas } from '../lib/api/ideas';\nimport { useVote, useUnvote } from '../lib/api/votes';\nimport { useAuth } from '../lib/auth';\nimport { useComments, useCreateComment } from '../lib/api/comments';\n\nconst categories = [\n  'All',\n  'Lammas - Accelerator & Native Apps',\n  'Technology COE - Reusable Assets/Enablers',\n  'Delivery - Process Improvement',\n  'Industry Solutions - Domain Expertise & Business Use Cases',\n  'Data Science',\n  'Learning & Development',\n  'Sales & Marketing',\n  'Operations, HR, CSM, ESM, etc.',\n] as const;\n\ntype Category = typeof categories[number];\ntype Status = 'All' | 'pending' | 'approved' | 'rejected';\n\nconst statuses: Status[] = ['All', 'pending', 'approved', 'rejected'];\n\n// Category color mapping\nconst getCategoryColor = (category: Exclude<Category, 'All'>) => {\n  const colorMap: Record<Exclude<Category, 'All'>, { bg: string; text: string; icon: string }> = {\n    'Lammas - Accelerator & Native Apps': {\n      bg: 'bg-blue-100',\n      text: 'text-blue-800',\n      icon: 'text-blue-500'\n    },\n    'Technology COE - Reusable Assets/Enablers': {\n      bg: 'bg-purple-100',\n      text: 'text-purple-800',\n      icon: 'text-purple-500'\n    },\n    'Delivery - Process Improvement': {\n      bg: 'bg-green-100',\n      text: 'text-green-800',\n      icon: 'text-green-500'\n    },\n    'Industry Solutions - Domain Expertise & Business Use Cases': {\n      bg: 'bg-orange-100',\n      text: 'text-orange-800',\n      icon: 'text-orange-500'\n    },\n    'Data Science': {\n      bg: 'bg-indigo-100',\n      text: 'text-indigo-800',\n      icon: 'text-indigo-500'\n    },\n    'Learning & Development': {\n      bg: 'bg-pink-100',\n      text: 'text-pink-800',\n      icon: 'text-pink-500'\n    },\n    'Sales & Marketing': {\n      bg: 'bg-yellow-100',\n      text: 'text-yellow-800',\n      icon: 'text-yellow-500'\n    },\n    'Operations, HR, CSM, ESM, etc.': {\n      bg: 'bg-teal-100',\n      text: 'text-teal-800',\n      icon: 'text-teal-500'\n    }\n  };\n\n  return colorMap[category];\n};\n\nexport function BrowseIdeasPage() {\n  const { user } = useAuth();\n  const { data: ideas, isLoading: ideasLoading } = useIdeas();\n  const { mutate: vote } = useVote();\n  const { mutate: unvote } = useUnvote();\n  const [selectedCategory, setSelectedCategory] = useState<Category>('All');\n  const [selectedStatus, setSelectedStatus] = useState<Status>('All');\n  const [searchQuery, setSearchQuery] = useState('');\n  const [selectedIdea, setSelectedIdea] = useState<any | null>(null);\n  const [newComment, setNewComment] = useState('');\n  const { mutate: createComment } = useCreateComment();\n  const { data: comments, isLoading: commentsLoading } = useComments(\n    selectedIdea?.id || null\n  );\n\n  const filteredIdeas = ideas?.filter(idea => {\n    const categoryMatch = selectedCategory === 'All' || idea.category === selectedCategory;\n    const statusMatch = selectedStatus === 'All' || idea.status === selectedStatus;\n    const searchMatch = \n      searchQuery === '' || \n      idea.title.toLowerCase().includes(searchQuery.toLowerCase()) ||\n      idea.description.toLowerCase().includes(searchQuery.toLowerCase());\n    return categoryMatch && statusMatch && searchMatch;\n  });\n\n  const handleVoteToggle = (ideaId: string) => {\n    if (!user) return;\n\n    const idea = ideas?.find(i => i.id === ideaId);\n    const hasVoted = idea?.votes?.some(v => v.user_id === user.id);\n\n    if (hasVoted) {\n      unvote({ ideaId, userId: user.id });\n    } else {\n      vote({ idea_id: ideaId, user_id: user.id });\n    }\n  };\n\n  const handleCommentSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    if (!user || !selectedIdea || !newComment.trim()) return;\n\n    createComment({\n      idea_id: selectedIdea.id,\n      author_id: user.id,\n      content: newComment.trim()\n    });\n\n    setNewComment('');\n  };\n\n  const getStatusColor = (status: string) => {\n    switch (status) {\n      case 'approved':\n        return 'text-green-600 bg-green-100';\n      case 'rejected':\n        return 'text-red-600 bg-red-100';\n      case 'pending':\n        return 'text-yellow-600 bg-yellow-100';\n      default:\n        return 'text-gray-600 bg-gray-100';\n    }\n  };\n\n  if (ideasLoading) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center\">\n        <Loader2 className=\"h-8 w-8 animate-spin text-indigo-600\" />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"py-8\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        {/* Filters */}\n        <div className=\"card p-6 mb-8\">\n          <div className=\"space-y-4\">\n            {/* Search */}\n            <div className=\"relative\">\n              <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n                <Search className=\"h-5 w-5 text-gray-400\" />\n              </div>\n              <input\n                type=\"text\"\n                placeholder=\"Search ideas...\"\n                value={searchQuery}\n                onChange={(e) => setSearchQuery(e.target.value)}\n                className=\"block w-full pl-10 pr-3 py-2 border border-gray-300 rounded-md leading-5 bg-white placeholder-gray-500 focus:outline-none focus:placeholder-gray-400 focus:ring-1 focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n              />\n            </div>\n\n            {/* Filters */}\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n              <div>\n                <label htmlFor=\"category\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                  Category\n                </label>\n                <select\n                  id=\"category\"\n                  value={selectedCategory}\n                  onChange={(e) => setSelectedCategory(e.target.value as Category)}\n                  className=\"block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm\"\n                >\n                  {categories.map((category) => (\n                    <option key={category} value={category}>{category}</option>\n                  ))}\n                </select>\n              </div>\n\n              <div>\n                <label htmlFor=\"status\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                  Status\n                </label>\n                <select\n                  id=\"status\"\n                  value={selectedStatus}\n                  onChange={(e) => setSelectedStatus(e.target.value as Status)}\n                  className=\"block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm\"\n                >\n                  {statuses.map((status) => (\n                    <option key={status} value={status}>\n                      {status.charAt(0).toUpperCase() + status.slice(1)}\n                    </option>\n                  ))}\n                </select>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Results Summary */}\n        <div className=\"mb-6\">\n          <h2 className=\"text-lg font-medium text-gray-900\">\n            {filteredIdeas?.length ?? 0} {(filteredIdeas?.length ?? 0) === 1 ? 'idea' : 'ideas'} found\n          </h2>\n        </div>\n\n        {/* Ideas Grid */}\n        <div className=\"grid gap-6 md:grid-cols-2 lg:grid-cols-3\">\n          {filteredIdeas?.map((idea) => {\n            const categoryColor = getCategoryColor(idea.category);\n            const hasVoted = idea.votes?.some(v => v.user_id === user?.id);\n            \n            return (\n              <div\n                key={idea.id}\n                className=\"card cursor-pointer hover:scale-105 transition-all duration-300\"\n                onClick={() => setSelectedIdea(idea)}\n              >\n                <div className=\"p-6\">\n                  <div className=\"flex items-start justify-between\">\n                    <h3 className=\"text-lg font-medium text-gray-900 mb-2\">{idea.title}</h3>\n                    <span className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${getStatusColor(idea.status)}`}>\n                      {idea.status.charAt(0).toUpperCase() + idea.status.slice(1)}\n                    </span>\n                  </div>\n                  <p className=\"text-gray-500 text-sm mb-4 line-clamp-2\">{idea.description}</p>\n                  <div className=\"flex items-center justify-between text-sm\">\n                    <div className=\"flex items-center space-x-4\">\n                      <button\n                        onClick={(e) => {\n                          e.stopPropagation();\n                          handleVoteToggle(idea.id);\n                        }}\n                        className={cn(\n                          \"flex items-center text-gray-500 hover:text-indigo-600 transition-colors\",\n                          hasVoted && \"text-indigo-600\"\n                        )}\n                        disabled={!user}\n                      >\n                        <ThumbsUp className=\"h-4 w-4 mr-1\" />\n                        {idea.votes?.length ?? 0}\n                      </button>\n                      <span className=\"flex items-center text-gray-500\">\n                        <MessageSquare className=\"h-4 w-4 mr-1\" />\n                        {idea.comments?.length ?? 0}\n                      </span>\n                      {idea.beans_earned > 0 && (\n                        <span className=\"flex items-center text-yellow-600\">\n                          <Award className=\"h-4 w-4 mr-1\" />\n                          {idea.beans_earned}\n                        </span>\n                      )}\n                    </div>\n                    <div className={cn(\n                      \"flex items-center px-2.5 py-1 rounded-full\",\n                      categoryColor.bg\n                    )}>\n                      <Tag className={cn(\"h-4 w-4 mr-1\", categoryColor.icon)} />\n                      <span className={cn(\"truncate max-w-[150px]\", categoryColor.text)} title={idea.category}>\n                        {idea.category}\n                      </span>\n                    </div>\n                  </div>\n                  <div className=\"mt-4 pt-4 border-t border-gray-100\">\n                    <div className=\"flex items-center justify-between text-sm\">\n                      <span className=\"text-gray-500\">\n                        By {idea.author?.full_name || 'Anonymous'}\n                      </span>\n                      <span className=\"text-gray-400\">\n                        {new Date(idea.created_at).toLocaleDateString()}\n                      </span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            );\n          })}\n        </div>\n\n        {/* Idea Detail Modal */}\n        {selectedIdea && (\n          <div className=\"fixed inset-0 bg-gray-500 bg-opacity-75 flex items-center justify-center p-4 z-50\">\n            <div className=\"glass-card max-w-2xl w-full max-h-[90vh] overflow-y-auto\">\n              <div className=\"p-6\">\n                <div className=\"flex items-start justify-between mb-4\">\n                  <h2 className=\"text-xl font-semibold text-gray-900\">{selectedIdea.title}</h2>\n                  <button\n                    onClick={() => setSelectedIdea(null)}\n                    className=\"text-gray-400 hover:text-gray-500\"\n                  >\n                    <span className=\"sr-only\">Close</span>\n                    <svg className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n                    </svg>\n                  </button>\n                </div>\n                <div className=\"space-y-4\">\n                  <div className=\"flex items-center space-x-2\">\n                    <span className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${getStatusColor(selectedIdea.status)}`}>\n                      {selectedIdea.status.charAt(0).toUpperCase() + selectedIdea.status.slice(1)}\n                    </span>\n                    <span className={cn(\n                      \"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium\",\n                      getCategoryColor(selectedIdea.category).bg,\n                      getCategoryColor(selectedIdea.category).text\n                    )}>\n                      <Tag className={cn(\"h-3 w-3 mr-1\", getCategoryColor(selectedIdea.category).icon)} />\n                      {selectedIdea.category}\n                    </span>\n                    {selectedIdea.beans_earned > 0 && (\n                      <span className=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-yellow-100 text-yellow-800\">\n                        <Award className=\"h-3 w-3 mr-1\" />\n                        {selectedIdea.beans_earned} Beans\n                      </span>\n                    )}\n                  </div>\n                  <p className=\"text-gray-600\">{selectedIdea.description}</p>\n\n                  {/* Contributors Section */}\n                  {selectedIdea.contributors?.length > 0 && (\n                    <div className=\"bg-gray-50 rounded-lg p-4\">\n                      <h3 className=\"text-sm font-medium text-gray-900 mb-3 flex items-center\">\n                        <Users className=\"h-4 w-4 mr-2 text-gray-400\" />\n                        Contributors\n                      </h3>\n                      <div className=\"space-y-2\">\n                        {selectedIdea.contributors.map((contributor: any) => (\n                          <div key={contributor.user_id} className=\"flex items-center\">\n                            <div className=\"h-8 w-8 rounded-full bg-indigo-100 flex items-center justify-center mr-3\">\n                              <User className=\"h-4 w-4 text-indigo-600\" />\n                            </div>\n                            <div>\n                              <p className=\"text-sm font-medium text-gray-900\">\n                                {contributor.profiles?.full_name || 'Unnamed User'}\n                              </p>\n                              <p className=\"text-xs text-gray-500\">\n                                {contributor.profiles?.email}\n                              </p>\n                            </div>\n                          </div>\n                        ))}\n                      </div>\n                    </div>\n                  )}\n\n                  {/* Resource Links */}\n                  {selectedIdea.resource_links?.length > 0 && (\n                    <div className=\"bg-gray-50 rounded-lg p-4\">\n                      <h3 className=\"text-sm font-medium text-gray-900 mb-3 flex items-center\">\n                        <LinkIcon className=\"h-4 w-4 mr-2 text-gray-400\" />\n                        Resource Links\n                      </h3>\n                      <div className=\"space-y-2\">\n                        {selectedIdea.resource_links.map((link: any) => (\n                          <div key={link.id} className=\"flex items-center justify-between\">\n                            <div className=\"flex items-center text-sm\">\n                              <LinkIcon className=\"h-4 w-4 mr-2 text-gray-400\" />\n                              <div>\n                                <p className=\"font-medium text-gray-900\">{link.title}</p>\n                                <a\n                                  href={link.url}\n                                  target=\"_blank\"\n                                  rel=\"noopener noreferrer\"\n                                  className=\"text-indigo-600 hover:text-indigo-500\"\n                                >\n                                  {link.url}\n                                </a>\n                              </div>\n                            </div>\n                          </div>\n                        ))}\n                      </div>\n                    </div>\n                  )}\n\n                  {/* Feedback Section */}\n                  {selectedIdea.feedback && (\n                    <div className=\"mt-4\">\n                      <h3 className=\"text-lg font-medium text-gray-900 mb-2\">Feedback</h3>\n                      <div className=\"bg-gray-50 rounded-lg p-4\">\n                        <div className=\"flex items-center justify-between mb-2\">\n                          <div className=\"flex items-center\">\n                            <div className=\"h-6 w-6 rounded-full bg-indigo-100 flex items-center justify-center mr-2\">\n                              <User className=\"h-3 w-3 text-indigo-600\" />\n                            </div>\n                            <div>\n                              <span className=\"font-medium text-gray-900\">\n                                {selectedIdea.feedback_by?.full_name || 'Anonymous Admin'}\n                              </span>\n                              {selectedIdea.feedback_at && (\n                                <span className=\"text-sm text-gray-500 ml-2\">\n                                  on {new Date(selectedIdea.feedback_at).toLocaleDateString()}\n                                </span>\n                              )}\n                            </div>\n                          </div>\n                        </div>\n                        <p className=\"text-gray-600\">{selectedIdea.feedback}</p>\n                      </div>\n                    </div>\n                  )}\n\n                  {/* Author and Date */}\n                  <div className=\"mt-4 pt-4 border-t border-gray-100\">\n                    <div className=\"flex items-center justify-between text-sm\">\n                      <span className=\"text-gray-500\">\n                        By {selectedIdea.author?.full_name || 'Anonymous'}\n                      </span>\n                      <span className=\"text-gray-400\">\n                        {new Date(selectedIdea.created_at).toLocaleDateString()}\n                      </span>\n                    </div>\n                  </div>\n                  \n                  {/* Comments Section */}\n                  <div className=\"mt-6 pt-6 border-t\">\n                    <h3 className=\"text-lg font-medium text-gray-900 mb-4\">Comments</h3>\n                    \n                    {user ? (\n                      <form onSubmit={handleCommentSubmit} className=\"mb-6\">\n                        <textarea\n                          value={newComment}\n                          onChange={(e) => setNewComment(e.target.value)}\n                          placeholder=\"Add a comment...\"\n                          className=\"w-full border-gray-300 rounded-md shadow-sm focus:border-indigo-500 focus:ring-indigo-500\"\n                          rows={3}\n                        />\n                        <div className=\"mt-2 flex justify-end\">\n                          <button\n                            type=\"submit\"\n                            disabled={!newComment.trim()}\n                            className=\"inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:opacity-50\"\n                          >\n                            Post Comment\n                          </button>\n                        </div>\n                      </form>\n                    ) : (\n                      <p className=\"text-sm text-gray-500 mb-6\">\n                        Please sign in to comment.\n                      </p>\n                    )}\n\n                    {commentsLoading ? (\n                      <div className=\"flex justify-center\">\n                        <Loader2 className=\"h-6 w-6 animate-spin text-indigo-600\" />\n                      </div>\n                    ) : comments?.length ? (\n                      <div className=\"space-y-4\">\n                        {comments.map((comment) => (\n                          <div key={comment.id} className=\"bg-gray-50 rounded-lg p-4\">\n                            <div className=\"flex justify-between items-start\">\n                              <span className=\"text-sm font-medium text-gray-900\">\n                                {comment.author?.full_name || 'Anonymous'}\n                              </span>\n                              <span className=\"text-xs text-gray-500\">\n                                {new Date(comment.created_at).toLocaleDateString()}\n                              </span>\n                            </div>\n                            <p className=\"mt-1 text-sm text-gray-600\">{comment.content}</p>\n                          </div>\n                        ))}\n                      </div>\n                    ) : (\n                      <p className=\"text-sm text-gray-500\">No comments yet.</p>\n                    )}\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}","import React, { useState } from 'react';\nimport { Calendar, Award, Clock, MessageSquare, Tag, Loader2, User, Link as LinkIcon, Users, ThumbsUp, Filter, Search } from 'lucide-react';\nimport { cn } from '../lib/utils';\nimport { useIdeas } from '../lib/api/ideas';\nimport { useAuth } from '../lib/auth';\nimport { useComments, useCreateComment } from '../lib/api/comments';\n\nconst categories = [\n  'All',\n  'Lammas - Accelerator & Native Apps',\n  'Technology COE - Reusable Assets/Enablers',\n  'Delivery - Process Improvement',\n  'Industry Solutions - Domain Expertise & Business Use Cases',\n  'Data Science',\n  'Learning & Development',\n  'Sales & Marketing',\n  'Operations, HR, CSM, ESM, etc.',\n] as const;\n\ntype Category = typeof categories[number];\ntype Status = 'All' | 'pending' | 'approved' | 'rejected';\n\nconst statuses: Status[] = ['All', 'pending', 'approved', 'rejected'];\n\n// Category color mapping\nconst getCategoryColor = (category: Exclude<Category, 'All'>) => {\n  const colorMap: Record<Exclude<Category, 'All'>, { bg: string; text: string; icon: string }> = {\n    'Lammas - Accelerator & Native Apps': {\n      bg: 'bg-blue-100',\n      text: 'text-blue-800',\n      icon: 'text-blue-500'\n    },\n    'Technology COE - Reusable Assets/Enablers': {\n      bg: 'bg-purple-100',\n      text: 'text-purple-800',\n      icon: 'text-purple-500'\n    },\n    'Delivery - Process Improvement': {\n      bg: 'bg-green-100',\n      text: 'text-green-800',\n      icon: 'text-green-500'\n    },\n    'Industry Solutions - Domain Expertise & Business Use Cases': {\n      bg: 'bg-orange-100',\n      text: 'text-orange-800',\n      icon: 'text-orange-500'\n    },\n    'Data Science': {\n      bg: 'bg-indigo-100',\n      text: 'text-indigo-800',\n      icon: 'text-indigo-500'\n    },\n    'Learning & Development': {\n      bg: 'bg-pink-100',\n      text: 'text-pink-800',\n      icon: 'text-pink-500'\n    },\n    'Sales & Marketing': {\n      bg: 'bg-yellow-100',\n      text: 'text-yellow-800',\n      icon: 'text-yellow-500'\n    },\n    'Operations, HR, CSM, ESM, etc.': {\n      bg: 'bg-teal-100',\n      text: 'text-teal-800',\n      icon: 'text-teal-500'\n    }\n  };\n\n  return colorMap[category];\n};\n\nexport function MyIdeasPage() {\n  const { user } = useAuth();\n  const { data: ideas, isLoading: ideasLoading } = useIdeas();\n  const [selectedIdea, setSelectedIdea] = useState<any | null>(null);\n  const [newComment, setNewComment] = useState('');\n  const { mutate: createComment } = useCreateComment();\n  const { data: comments, isLoading: commentsLoading } = useComments(\n    selectedIdea?.id || null\n  );\n  const [searchQuery, setSearchQuery] = useState('');\n  const [selectedCategory, setSelectedCategory] = useState<Category>('All');\n  const [selectedStatus, setSelectedStatus] = useState<Status>('All');\n\n  const myIdeas = ideas?.filter(idea => idea.author_id === user?.id);\n\n  const filteredIdeas = myIdeas?.filter(idea => {\n    const categoryMatch = selectedCategory === 'All' || idea.category === selectedCategory;\n    const statusMatch = selectedStatus === 'All' || idea.status === selectedStatus;\n    const searchMatch = \n      searchQuery === '' || \n      idea.title.toLowerCase().includes(searchQuery.toLowerCase()) ||\n      idea.description.toLowerCase().includes(searchQuery.toLowerCase());\n    return categoryMatch && statusMatch && searchMatch;\n  });\n\n  const handleCommentSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    if (!user || !selectedIdea || !newComment.trim()) return;\n\n    createComment({\n      idea_id: selectedIdea.id,\n      author_id: user.id,\n      content: newComment.trim()\n    });\n\n    setNewComment('');\n  };\n\n  const getStatusColor = (status: string) => {\n    switch (status) {\n      case 'approved':\n        return 'text-green-600 bg-green-100';\n      case 'rejected':\n        return 'text-red-600 bg-red-100';\n      case 'pending':\n        return 'text-yellow-600 bg-yellow-100';\n      default:\n        return 'text-gray-600 bg-gray-100';\n    }\n  };\n\n  if (ideasLoading) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center\">\n        <Loader2 className=\"h-8 w-8 animate-spin text-indigo-600\" />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"py-8\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"mb-8\">\n          <h1 className=\"text-2xl font-bold text-gray-900 mb-4\">My Ideas</h1>\n          \n          {/* Filters */}\n          <div className=\"bg-white rounded-lg shadow-sm p-4 space-y-4\">\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n              {/* Search */}\n              <div className=\"relative\">\n                <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n                  <Search className=\"h-5 w-5 text-gray-400\" />\n                </div>\n                <input\n                  type=\"text\"\n                  placeholder=\"Search ideas...\"\n                  value={searchQuery}\n                  onChange={(e) => setSearchQuery(e.target.value)}\n                  className=\"block w-full pl-10 pr-3 py-2 border border-gray-300 rounded-md leading-5 bg-white placeholder-gray-500 focus:outline-none focus:placeholder-gray-400 focus:ring-1 focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n                />\n              </div>\n\n              {/* Category Filter */}\n              <div>\n                <select\n                  value={selectedCategory}\n                  onChange={(e) => setSelectedCategory(e.target.value as Category)}\n                  className=\"block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm\"\n                >\n                  {categories.map((category) => (\n                    <option key={category} value={category}>{category}</option>\n                  ))}\n                </select>\n              </div>\n\n              {/* Status Filter */}\n              <div>\n                <select\n                  value={selectedStatus}\n                  onChange={(e) => setSelectedStatus(e.target.value as Status)}\n                  className=\"block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm\"\n                >\n                  {statuses.map((status) => (\n                    <option key={status} value={status}>\n                      {status.charAt(0).toUpperCase() + status.slice(1)}\n                    </option>\n                  ))}\n                </select>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Ideas Table */}\n        <div className=\"bg-white shadow-sm rounded-lg overflow-hidden\">\n          <div className=\"overflow-x-auto\">\n            <table className=\"min-w-full divide-y divide-gray-200\">\n              <thead className=\"bg-gray-50\">\n                <tr>\n                  <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Title & Description\n                  </th>\n                  <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Category\n                  </th>\n                  <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Status\n                  </th>\n                  <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Engagement\n                  </th>\n                  <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Contributors\n                  </th>\n                  <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Date\n                  </th>\n                </tr>\n              </thead>\n              <tbody className=\"bg-white divide-y divide-gray-200\">\n                {filteredIdeas?.map((idea) => {\n                  const categoryColor = getCategoryColor(idea.category);\n                  return (\n                    <tr\n                      key={idea.id}\n                      onClick={() => setSelectedIdea(idea)}\n                      className=\"hover:bg-gray-50 cursor-pointer\"\n                    >\n                      <td className=\"px-6 py-4\">\n                        <div className=\"space-y-1\">\n                          <div className=\"text-sm font-medium text-gray-900\">{idea.title}</div>\n                          <div className=\"text-sm text-gray-500 line-clamp-2\">{idea.description}</div>\n                          {idea.resource_links?.length > 0 && (\n                            <div className=\"flex items-center text-xs text-gray-500\">\n                              <LinkIcon className=\"h-3 w-3 mr-1\" />\n                              {idea.resource_links.length} resource{idea.resource_links.length !== 1 ? 's' : ''}\n                            </div>\n                          )}\n                        </div>\n                      </td>\n                      <td className=\"px-6 py-4\">\n                        <span className={cn(\n                          \"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium\",\n                          categoryColor.bg,\n                          categoryColor.text\n                        )}>\n                          <Tag className={cn(\"h-3 w-3 mr-1\", categoryColor.icon)} />\n                          {idea.category}\n                        </span>\n                      </td>\n                      <td className=\"px-6 py-4\">\n                        <span className={cn(\n                          \"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium\",\n                          getStatusColor(idea.status)\n                        )}>\n                          {idea.status.charAt(0).toUpperCase() + idea.status.slice(1)}\n                        </span>\n                        {idea.feedback && (\n                          <div className=\"mt-1 text-xs text-gray-500\">\n                            <div className=\"line-clamp-2 italic\">{idea.feedback}</div>\n                          </div>\n                        )}\n                      </td>\n                      <td className=\"px-6 py-4\">\n                        <div className=\"flex items-center space-x-4 text-sm text-gray-500\">\n                          <span className=\"flex items-center\">\n                            <ThumbsUp className=\"h-4 w-4 mr-1\" />\n                            {idea.votes?.length || 0}\n                          </span>\n                          <span className=\"flex items-center\">\n                            <MessageSquare className=\"h-4 w-4 mr-1\" />\n                            {idea.comments?.length || 0}\n                          </span>\n                          {idea.beans_earned > 0 && (\n                            <span className=\"flex items-center text-yellow-600\">\n                              <Award className=\"h-4 w-4 mr-1\" />\n                              {idea.beans_earned}\n                            </span>\n                          )}\n                        </div>\n                      </td>\n                      <td className=\"px-6 py-4\">\n                        {idea.contributors?.length > 0 ? (\n                          <div className=\"flex -space-x-2\">\n                            {idea.contributors.slice(0, 3).map((contributor: any) => (\n                              <div\n                                key={contributor.user_id}\n                                className=\"h-8 w-8 rounded-full bg-indigo-100 flex items-center justify-center border-2 border-white\"\n                                title={contributor.profiles?.full_name || 'Unnamed User'}\n                              >\n                                <User className=\"h-4 w-4 text-indigo-600\" />\n                              </div>\n                            ))}\n                            {idea.contributors.length > 3 && (\n                              <div className=\"h-8 w-8 rounded-full bg-gray-100 flex items-center justify-center border-2 border-white\">\n                                <span className=\"text-xs text-gray-600\">+{idea.contributors.length - 3}</span>\n                              </div>\n                            )}\n                          </div>\n                        ) : (\n                          <span className=\"text-sm text-gray-500\">No contributors</span>\n                        )}\n                      </td>\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                        {new Date(idea.created_at).toLocaleDateString()}\n                      </td>\n                    </tr>\n                  );\n                })}\n              </tbody>\n            </table>\n          </div>\n        </div>\n\n        {/* Idea Detail Modal */}\n        {selectedIdea && (\n          <div className=\"fixed inset-0 bg-gray-500 bg-opacity-75 flex items-center justify-center p-4 z-50\">\n            <div className=\"glass-card max-w-2xl w-full max-h-[90vh] overflow-y-auto\">\n              <div className=\"p-6\">\n                <div className=\"flex items-start justify-between mb-4\">\n                  <h2 className=\"text-xl font-semibold text-gray-900\">{selectedIdea.title}</h2>\n                  <button\n                    onClick={() => setSelectedIdea(null)}\n                    className=\"text-gray-400 hover:text-gray-500\"\n                  >\n                    <span className=\"sr-only\">Close</span>\n                    <svg className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n                    </svg>\n                  </button>\n                </div>\n                <div className=\"space-y-4\">\n                  <div className=\"flex items-center space-x-2\">\n                    <span className={cn(\n                      \"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium\",\n                      getStatusColor(selectedIdea.status)\n                    )}>\n                      {selectedIdea.status.charAt(0).toUpperCase() + selectedIdea.status.slice(1)}\n                    </span>\n                    <span className={cn(\n                      \"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium\",\n                      getCategoryColor(selectedIdea.category).bg,\n                      getCategoryColor(selectedIdea.category).text\n                    )}>\n                      <Tag className={cn(\"h-3 w-3 mr-1\", getCategoryColor(selectedIdea.category).icon)} />\n                      {selectedIdea.category}\n                    </span>\n                  </div>\n                  <p className=\"text-gray-600\">{selectedIdea.description}</p>\n\n                  {/* Contributors Section */}\n                  {selectedIdea.contributors?.length > 0 && (\n                    <div className=\"bg-gray-50 rounded-lg p-4\">\n                      <h3 className=\"text-sm font-medium text-gray-900 mb-3 flex items-center\">\n                        <Users className=\"h-4 w-4 mr-2 text-gray-400\" />\n                        Contributors\n                      </h3>\n                      <div className=\"space-y-2\">\n                        {selectedIdea.contributors.map((contributor: any) => (\n                          <div key={contributor.user_id} className=\"flex items-center\">\n                            <div className=\"h-8 w-8 rounded-full bg-indigo-100 flex items-center justify-center mr-3\">\n                              <User className=\"h-4 w-4 text-indigo-600\" />\n                            </div>\n                            <div>\n                              <p className=\"text-sm font-medium text-gray-900\">\n                                {contributor.profiles?.full_name || 'Unnamed User'}\n                              </p>\n                              <p className=\"text-xs text-gray-500\">\n                                {contributor.profiles?.email}\n                              </p>\n                            </div>\n                          </div>\n                        ))}\n                      </div>\n                    </div>\n                  )}\n\n                  {/* Resource Links */}\n                  {selectedIdea.resource_links?.length > 0 && (\n                    <div className=\"bg-gray-50 rounded-lg p-4\">\n                      <h3 className=\"text-sm font-medium text-gray-900 mb-3 flex items-center\">\n                        <LinkIcon className=\"h-4 w-4 mr-2 text-gray-400\" />\n                        Resource Links\n                      </h3>\n                      <div className=\"space-y-2\">\n                        {selectedIdea.resource_links.map((link: any) => (\n                          <div key={link.id} className=\"flex items-center justify-between\">\n                            <div className=\"flex items-center text-sm\">\n                              <LinkIcon className=\"h-4 w-4 mr-2 text-gray-400\" />\n                              <div>\n                                <p className=\"font-medium text-gray-900\">{link.title}</p>\n                                <a\n                                  href={link.url}\n                                  target=\"_blank\"\n                                  rel=\"noopener noreferrer\"\n                                  className=\"text-indigo-600 hover:text-indigo-500\"\n                                >\n                                  {link.url}\n                                </a>\n                              </div>\n                            </div>\n                          </div>\n                        ))}\n                      </div>\n                    </div>\n                  )}\n\n                  {/* Feedback Section */}\n                  {selectedIdea.feedback && (\n                    <div className=\"bg-gray-50 p-4 rounded-lg\">\n                      <h3 className=\"text-sm font-medium text-gray-900 mb-2\">Feedback</h3>\n                      <p className=\"text-sm text-gray-600\">{selectedIdea.feedback}</p>\n                    </div>\n                  )}\n                  \n                  {/* Comments Section */}\n                  <div className=\"mt-6 pt-6 border-t\">\n                    <h3 className=\"text-lg font-medium text-gray-900 mb-4\">Comments</h3>\n                    \n                    <form onSubmit={handleCommentSubmit} className=\"mb-6\">\n                      <textarea\n                        value={newComment}\n                        onChange={(e) => setNewComment(e.target.value)}\n                        placeholder=\"Add a comment...\"\n                        className=\"w-full border-gray-300 rounded-md shadow-sm focus:border-indigo-500 focus:ring-indigo-500\"\n                        rows={3}\n                      />\n                      <div className=\"mt-2 flex justify-end\">\n                        <button\n                          type=\"submit\"\n                          disabled={!newComment.trim()}\n                          className=\"inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:opacity-50\"\n                        >\n                          Post Comment\n                        </button>\n                      </div>\n                    </form>\n\n                    {commentsLoading ? (\n                      <div className=\"flex justify-center\">\n                        <Loader2 className=\"h-6 w-6 animate-spin text-indigo-600\" />\n                      </div>\n                    ) : comments?.length ? (\n                      <div className=\"space-y-4\">\n                        {comments.map((comment) => (\n                          <div key={comment.id} className=\"bg-gray-50 rounded-lg p-4\">\n                            <div className=\"flex justify-between items-start\">\n                              <span className=\"text-sm font-medium text-gray-900\">\n                                {comment.author?.full_name || 'Anonymous'}\n                              </span>\n                              <span className=\"text-xs text-gray-500\">\n                                {new Date(comment.created_at).toLocaleDateString()}\n                              </span>\n                            </div>\n                            <p className=\"mt-1 text-sm text-gray-600\">{comment.content}</p>\n                          </div>\n                        ))}\n                      </div>\n                    ) : (\n                      <p className=\"text-sm text-gray-500\">No comments yet.</p>\n                    )}\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}","import React, { useState, useEffect } from 'react';\nimport { X, Plus, Send, Loader2, ShieldAlert, User, Link as LinkIcon } from 'lucide-react';\nimport { cn } from '../lib/utils';\nimport { useAuth } from '../lib/auth';\nimport { useCreateIdea } from '../lib/api/ideas';\nimport { useNavigate } from 'react-router-dom';\nimport { supabase } from '../lib/supabase';\n\ninterface ResourceLink {\n  id: string;\n  url: string;\n  title: string;\n}\n\ninterface Contributor {\n  id: string;\n  full_name: string;\n  email: string;\n}\n\ninterface IdeaFormData {\n  title: string;\n  category: string;\n  description: string;\n  resourceLinks: ResourceLink[];\n  contributors: Contributor[];\n}\n\nconst categories = [\n  'Lammas - Accelerator & Native Apps',\n  'Technology COE - Reusable Assets/Enablers',\n  'Delivery - Process Improvement',\n  'Industry Solutions - Domain Expertise & Business Use Cases',\n  'Data Science',\n  'Learning & Development',\n  'Sales & Marketing',\n  'Operations, HR, CSM, ESM, etc.',\n] as const;\n\nexport function SubmitIdeaPage() {\n  const { user } = useAuth();\n  const navigate = useNavigate();\n  const { mutate: createIdea, isLoading } = useCreateIdea();\n  const isAdmin = user?.email?.endsWith('@kipi.ai');\n  const [formData, setFormData] = useState<IdeaFormData>({\n    title: '',\n    category: '',\n    description: '',\n    resourceLinks: [],\n    contributors: [],\n  });\n\n  const [error, setError] = useState<string | null>(null);\n  const [contributorEmail, setContributorEmail] = useState('');\n  const [contributorSearchResults, setContributorSearchResults] = useState<Contributor[]>([]);\n  const [searchLoading, setSearchLoading] = useState(false);\n  const [newLinkTitle, setNewLinkTitle] = useState('');\n  const [newLinkUrl, setNewLinkUrl] = useState('');\n\n  // Redirect admins away from the submission page\n  useEffect(() => {\n    if (isAdmin) {\n      navigate('/');\n    }\n  }, [isAdmin, navigate]);\n\n  // If user is admin, show access denied message\n  if (isAdmin) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center bg-gray-50\">\n        <div className=\"text-center\">\n          <ShieldAlert className=\"mx-auto h-12 w-12 text-red-500 mb-4\" />\n          <h1 className=\"text-2xl font-bold text-gray-900 mb-2\">Access Restricted</h1>\n          <p className=\"text-gray-600 mb-4\">\n            Administrators cannot submit ideas. Please use a regular user account.\n          </p>\n          <button\n            onClick={() => navigate('/')}\n            className=\"inline-flex items-center px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700\"\n          >\n            Return to Home\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n  const searchContributors = async (email: string) => {\n    if (!email.trim()) {\n      setContributorSearchResults([]);\n      return;\n    }\n\n    setSearchLoading(true);\n    try {\n      const { data, error } = await supabase\n        .from('profiles')\n        .select('id, full_name, email')\n        .ilike('email', `%${email}%`)\n        .limit(5);\n\n      if (error) throw error;\n      setContributorSearchResults(data || []);\n    } catch (err) {\n      console.error('Error searching contributors:', err);\n    } finally {\n      setSearchLoading(false);\n    }\n  };\n\n  const handleContributorSearch = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const email = e.target.value;\n    setContributorEmail(email);\n    searchContributors(email);\n  };\n\n  const addContributor = (contributor: Contributor) => {\n    if (!formData.contributors.some(c => c.id === contributor.id)) {\n      setFormData(prev => ({\n        ...prev,\n        contributors: [...prev.contributors, contributor],\n      }));\n    }\n    setContributorEmail('');\n    setContributorSearchResults([]);\n  };\n\n  const removeContributor = (id: string) => {\n    setFormData(prev => ({\n      ...prev,\n      contributors: prev.contributors.filter(c => c.id !== id),\n    }));\n  };\n\n  const addResourceLink = () => {\n    if (newLinkUrl.trim() && newLinkTitle.trim()) {\n      const newLink: ResourceLink = {\n        id: crypto.randomUUID(),\n        url: newLinkUrl.trim(),\n        title: newLinkTitle.trim()\n      };\n\n      setFormData(prev => ({\n        ...prev,\n        resourceLinks: [...prev.resourceLinks, newLink]\n      }));\n\n      setNewLinkUrl('');\n      setNewLinkTitle('');\n    }\n  };\n\n  const removeResourceLink = (id: string) => {\n    setFormData(prev => ({\n      ...prev,\n      resourceLinks: prev.resourceLinks.filter(link => link.id !== id)\n    }));\n  };\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    if (!user) return;\n\n    try {\n      setError(null);\n\n      // Create the idea\n      await createIdea({\n        title: formData.title,\n        description: formData.description,\n        category: formData.category,\n        author_id: user.id,\n        status: 'pending',\n        resource_links: formData.resourceLinks\n      }, {\n        onSuccess: async (idea) => {\n          // Add contributors\n          if (formData.contributors.length > 0) {\n            await Promise.all(\n              formData.contributors.map(async (contributor) => {\n                const { error } = await supabase\n                  .from('idea_contributors')\n                  .insert({\n                    idea_id: idea.id,\n                    user_id: contributor.id\n                  });\n                if (error) throw error;\n              })\n            );\n          }\n\n          navigate('/my-ideas');\n        }\n      });\n    } catch (err) {\n      console.error('Error submitting idea:', err);\n      setError('Failed to submit idea. Please try again.');\n    }\n  };\n\n  return (\n    <div className=\"py-8\">\n      <div className=\"max-w-3xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"text-center mb-8\">\n          <h1 className=\"text-3xl font-bold text-gray-900\">Submit Your Idea</h1>\n          <p className=\"mt-2 text-lg text-gray-600\">\n            Share your innovative ideas with the community\n          </p>\n        </div>\n\n        <form onSubmit={handleSubmit} className=\"bg-white shadow-lg rounded-lg p-6 space-y-6\">\n          {error && (\n            <div className=\"rounded-md bg-red-50 p-4\">\n              <div className=\"text-sm text-red-700\">{error}</div>\n            </div>\n          )}\n\n          {/* Title */}\n          <div>\n            <label htmlFor=\"title\" className=\"block text-sm font-medium text-gray-700 after:content-['*'] after:ml-0.5 after:text-red-500\">\n              Idea Title\n            </label>\n            <input\n              type=\"text\"\n              id=\"title\"\n              required\n              placeholder=\"Enter your idea title here\"\n              value={formData.title}\n              onChange={e => setFormData(prev => ({ ...prev, title: e.target.value }))}\n              className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500\"\n            />\n          </div>\n\n          {/* Category */}\n          <div>\n            <label htmlFor=\"category\" className=\"block text-sm font-medium text-gray-700 after:content-['*'] after:ml-0.5 after:text-red-500\">\n              Idea Category\n            </label>\n            <select\n              id=\"category\"\n              required\n              value={formData.category}\n              onChange={e => setFormData(prev => ({ ...prev, category: e.target.value }))}\n              className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500\"\n            >\n              <option value=\"\">Select a category</option>\n              {categories.map(category => (\n                <option key={category} value={category}>{category}</option>\n              ))}\n            </select>\n          </div>\n\n          {/* Description */}\n          <div>\n            <label htmlFor=\"description\" className=\"block text-sm font-medium text-gray-700 after:content-['*'] after:ml-0.5 after:text-red-500\">\n              Idea Description\n            </label>\n            <textarea\n              id=\"description\"\n              required\n              rows={6}\n              placeholder=\"Provide a detailed description of your idea\"\n              value={formData.description}\n              onChange={e => setFormData(prev => ({ ...prev, description: e.target.value }))}\n              className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500\"\n            />\n          </div>\n\n          {/* Resource Links */}\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700\">\n              Resource Links\n            </label>\n            <div className=\"mt-1 space-y-2\">\n              <div className=\"flex gap-2\">\n                <div className=\"flex-1\">\n                  <input\n                    type=\"text\"\n                    value={newLinkTitle}\n                    onChange={e => setNewLinkTitle(e.target.value)}\n                    placeholder=\"Link title\"\n                    className=\"block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500\"\n                  />\n                </div>\n                <div className=\"flex-1\">\n                  <input\n                    type=\"url\"\n                    value={newLinkUrl}\n                    onChange={e => setNewLinkUrl(e.target.value)}\n                    placeholder=\"https://example.com\"\n                    className=\"block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500\"\n                  />\n                </div>\n                <button\n                  type=\"button\"\n                  onClick={addResourceLink}\n                  disabled={!newLinkUrl.trim() || !newLinkTitle.trim()}\n                  className=\"inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:opacity-50\"\n                >\n                  <Plus className=\"h-4 w-4\" />\n                </button>\n              </div>\n\n              {formData.resourceLinks.length > 0 && (\n                <div className=\"mt-3\">\n                  <h4 className=\"text-sm font-medium text-gray-900 mb-2\">Added Links:</h4>\n                  <div className=\"space-y-2\">\n                    {formData.resourceLinks.map((link) => (\n                      <div\n                        key={link.id}\n                        className=\"flex items-center justify-between bg-gray-50 rounded-md p-2\"\n                      >\n                        <div className=\"flex items-center\">\n                          <LinkIcon className=\"h-4 w-4 text-gray-400 mr-2\" />\n                          <div>\n                            <p className=\"text-sm font-medium text-gray-900\">{link.title}</p>\n                            <a\n                              href={link.url}\n                              target=\"_blank\"\n                              rel=\"noopener noreferrer\"\n                              className=\"text-xs text-indigo-600 hover:text-indigo-500\"\n                            >\n                              {link.url}\n                            </a>\n                          </div>\n                        </div>\n                        <button\n                          type=\"button\"\n                          onClick={() => removeResourceLink(link.id)}\n                          className=\"text-gray-400 hover:text-gray-500\"\n                        >\n                          <X className=\"h-4 w-4\" />\n                        </button>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n              )}\n            </div>\n          </div>\n\n          {/* Contributors */}\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700\">\n              Contributors\n            </label>\n            <div className=\"mt-1 space-y-2\">\n              <div className=\"relative\">\n                <input\n                  type=\"email\"\n                  value={contributorEmail}\n                  onChange={handleContributorSearch}\n                  placeholder=\"Search contributors by email\"\n                  className=\"block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500\"\n                />\n                {searchLoading && (\n                  <div className=\"absolute right-3 top-2\">\n                    <Loader2 className=\"h-5 w-5 animate-spin text-gray-400\" />\n                  </div>\n                )}\n                {contributorSearchResults.length > 0 && (\n                  <div className=\"absolute z-10 mt-1 w-full bg-white shadow-lg rounded-md py-1 text-base ring-1 ring-black ring-opacity-5 overflow-auto max-h-60\">\n                    {contributorSearchResults.map((contributor) => (\n                      <button\n                        key={contributor.id}\n                        type=\"button\"\n                        onClick={() => addContributor(contributor)}\n                        className=\"w-full text-left px-4 py-2 text-sm text-gray-900 hover:bg-gray-100 flex items-center\"\n                      >\n                        <User className=\"h-4 w-4 mr-2 text-gray-400\" />\n                        <div>\n                          <p className=\"font-medium\">{contributor.full_name || 'Unnamed User'}</p>\n                          <p className=\"text-gray-500\">{contributor.email}</p>\n                        </div>\n                      </button>\n                    ))}\n                  </div>\n                )}\n              </div>\n\n              {formData.contributors.length > 0 && (\n                <div className=\"mt-3\">\n                  <h4 className=\"text-sm font-medium text-gray-900 mb-2\">Added Contributors:</h4>\n                  <div className=\"space-y-2\">\n                    {formData.contributors.map((contributor) => (\n                      <div\n                        key={contributor.id}\n                        className=\"flex items-center justify-between bg-gray-50 rounded-md p-2\"\n                      >\n                        <div className=\"flex items-center\">\n                          <User className=\"h-4 w-4 text-gray-400 mr-2\" />\n                          <div>\n                            <p className=\"text-sm font-medium text-gray-900\">\n                              {contributor.full_name || 'Unnamed User'}\n                            </p>\n                            <p className=\"text-xs text-gray-500\">{contributor.email}</p>\n                          </div>\n                        </div>\n                        <button\n                          type=\"button\"\n                          onClick={() => removeContributor(contributor.id)}\n                          className=\"text-gray-400 hover:text-gray-500\"\n                        >\n                          <X className=\"h-4 w-4\" />\n                        </button>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n              )}\n            </div>\n          </div>\n\n          {/* Form Actions */}\n          <div className=\"flex items-center justify-end space-x-4 pt-4 border-t\">\n            <button\n              type=\"button\"\n              onClick={() => navigate(-1)}\n              className=\"px-4 py-2 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n            >\n              Cancel\n            </button>\n            <button\n              type=\"submit\"\n              disabled={isLoading}\n              className={cn(\n                \"inline-flex items-center px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white\",\n                \"bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\",\n                isLoading && \"opacity-75 cursor-not-allowed\"\n              )}\n            >\n              {isLoading ? (\n                <>\n                  <Loader2 className=\"animate-spin h-4 w-4 mr-2\" />\n                  Submitting...\n                </>\n              ) : (\n                <>\n                  Submit Idea\n                  <Send className=\"ml-2 h-4 w-4\" />\n                </>\n              )}\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n}","import React, { useState } from 'react';\nimport { useIdeas } from '../../lib/api/ideas';\nimport { useUsers } from '../../lib/api/users';\nimport { \n  BarChart3, \n  Users, \n  Lightbulb, \n  Award, \n  TrendingUp, \n  MessageSquare, \n  Download,\n  Calendar,\n  Filter,\n  PieChart,\n  Target,\n  ThumbsUp,\n  Clock,\n  CheckCircle,\n  XCircle,\n  Brain,\n  Medal,\n  Star\n} from 'lucide-react';\nimport { cn } from '../../lib/utils';\n\nconst timeRanges = ['All Time', 'This Year', 'This Month', 'This Week'] as const;\ntype TimeRange = typeof timeRanges[number];\n\nexport function Analytics() {\n  const { data: ideas } = useIdeas();\n  const { data: users } = useUsers();\n  const [selectedTimeRange, setSelectedTimeRange] = useState<TimeRange>('All Time');\n\n  // Filter ideas based on time range\n  const filterIdeasByTime = (ideas: any[]) => {\n    if (!ideas) return [];\n    const now = new Date();\n    \n    switch (selectedTimeRange) {\n      case 'This Week':\n        const weekAgo = new Date(now.getTime() - 7 * 24 * 60 * 60 * 1000);\n        return ideas.filter(idea => new Date(idea.created_at) >= weekAgo);\n      case 'This Month':\n        const monthAgo = new Date(now.getFullYear(), now.getMonth(), 1);\n        return ideas.filter(idea => new Date(idea.created_at) >= monthAgo);\n      case 'This Year':\n        const yearStart = new Date(now.getFullYear(), 0, 1);\n        return ideas.filter(idea => new Date(idea.created_at) >= yearStart);\n      default:\n        return ideas;\n    }\n  };\n\n  const filteredIdeas = filterIdeasByTime(ideas);\n\n  // Calculate statistics\n  const stats = {\n    totalIdeas: filteredIdeas.length,\n    totalUsers: users?.length || 0,\n    activeUsers: users?.filter(user => user.ideas?.[0]?.count > 0).length || 0,\n    approvedIdeas: filteredIdeas.filter(idea => idea.status === 'approved').length,\n    rejectedIdeas: filteredIdeas.filter(idea => idea.status === 'rejected').length,\n    pendingIdeas: filteredIdeas.filter(idea => idea.status === 'pending').length,\n    totalBeans: filteredIdeas.reduce((sum, idea) => sum + (idea.beans_earned || 0), 0),\n    totalComments: filteredIdeas.reduce((sum, idea) => sum + (idea.comments?.length || 0), 0),\n    totalVotes: filteredIdeas.reduce((sum, idea) => sum + (idea.votes?.length || 0), 0),\n    avgBeansPerIdea: filteredIdeas.length \n      ? Math.round((filteredIdeas.reduce((sum, idea) => sum + (idea.beans_earned || 0), 0) / filteredIdeas.length) * 10) / 10\n      : 0,\n    avgCommentsPerIdea: filteredIdeas.length\n      ? Math.round((filteredIdeas.reduce((sum, idea) => sum + (idea.comments?.length || 0), 0) / filteredIdeas.length) * 10) / 10\n      : 0,\n    avgVotesPerIdea: filteredIdeas.length\n      ? Math.round((filteredIdeas.reduce((sum, idea) => sum + (idea.votes?.length || 0), 0) / filteredIdeas.length) * 10) / 10\n      : 0\n  };\n\n  // Calculate category distribution\n  const categoryStats = filteredIdeas.reduce((acc: Record<string, number>, idea) => {\n    acc[idea.category] = (acc[idea.category] || 0) + 1;\n    return acc;\n  }, {});\n\n  // Calculate monthly submissions\n  const monthlyStats = filteredIdeas.reduce((acc: Record<string, number>, idea) => {\n    const month = new Date(idea.created_at).toLocaleString('default', { month: 'long' });\n    acc[month] = (acc[month] || 0) + 1;\n    return acc;\n  }, {});\n\n  // Calculate user engagement metrics\n  const userEngagement = {\n    totalActiveUsers: users?.filter(user => user.ideas?.[0]?.count > 0).length || 0,\n    totalContributors: new Set(filteredIdeas.flatMap(idea => \n      idea.contributors?.map(c => c.user_id) || []\n    )).size,\n    mostActiveUsers: users\n      ?.filter(user => user.ideas?.[0]?.count > 0)\n      .sort((a, b) => (b.ideas?.[0]?.count || 0) - (a.ideas?.[0]?.count || 0))\n      .slice(0, 5) || []\n  };\n\n  const downloadCSV = (data: any[], filename: string) => {\n    const csvContent = data.map(row => \n      Object.values(row).map(value => \n        typeof value === 'string' && value.includes(',') \n          ? `\"${value}\"`\n          : value\n      ).join(',')\n    ).join('\\n');\n\n    const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });\n    const link = document.createElement('a');\n    if (link.download !== undefined) {\n      const url = URL.createObjectURL(blob);\n      link.setAttribute('href', url);\n      link.setAttribute('download', filename);\n      link.style.visibility = 'hidden';\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n    }\n  };\n\n  const downloadIdeasData = () => {\n    if (!filteredIdeas) return;\n\n    const headers = ['Title,Category,Status,Beans,Comments,Votes,Created At\\n'];\n    const csvData = filteredIdeas.map(idea => ({\n      title: idea.title,\n      category: idea.category,\n      status: idea.status,\n      beans: idea.beans_earned || 0,\n      comments: idea.comments?.length || 0,\n      votes: idea.votes?.length || 0,\n      created_at: new Date(idea.created_at).toLocaleDateString()\n    }));\n\n    downloadCSV([...headers, ...csvData], 'ideas-data.csv');\n  };\n\n  const downloadCategoryStats = () => {\n    const headers = ['Category,Count\\n'];\n    const csvData = Object.entries(categoryStats).map(([category, count]) => ({\n      category,\n      count\n    }));\n\n    downloadCSV([...headers, ...csvData], 'category-stats.csv');\n  };\n\n  const downloadMonthlyStats = () => {\n    const headers = ['Month,Submissions\\n'];\n    const csvData = Object.entries(monthlyStats).map(([month, count]) => ({\n      month,\n      count\n    }));\n\n    downloadCSV([...headers, ...csvData], 'monthly-stats.csv');\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Time Range Filter */}\n      <div className=\"flex justify-end\">\n        <div className=\"inline-flex rounded-md shadow-sm\">\n          {timeRanges.map((range) => (\n            <button\n              key={range}\n              onClick={() => setSelectedTimeRange(range)}\n              className={cn(\n                \"relative inline-flex items-center px-4 py-2 border text-sm font-medium\",\n                selectedTimeRange === range\n                  ? \"z-10 bg-indigo-50 border-indigo-500 text-indigo-600\"\n                  : \"border-gray-300 bg-white text-gray-500 hover:bg-gray-50\",\n                \"first:rounded-l-md last:rounded-r-md\"\n              )}\n            >\n              {range}\n            </button>\n          ))}\n        </div>\n      </div>\n\n      {/* Key Metrics Grid */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n        <div className=\"bg-white rounded-lg shadow p-6\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-sm font-medium text-gray-600\">Total Ideas</p>\n              <p className=\"text-2xl font-semibold text-gray-900\">{stats.totalIdeas}</p>\n            </div>\n            <div className=\"p-3 bg-blue-100 rounded-full\">\n              <Lightbulb className=\"h-6 w-6 text-blue-600\" />\n            </div>\n          </div>\n          <div className=\"mt-4 flex items-center justify-between text-sm\">\n            <div className=\"text-green-600\">\n              <span className=\"font-medium\">{stats.approvedIdeas}</span> approved\n            </div>\n            <div className=\"text-yellow-600\">\n              <span className=\"font-medium\">{stats.pendingIdeas}</span> pending\n            </div>\n            <div className=\"text-red-600\">\n              <span className=\"font-medium\">{stats.rejectedIdeas}</span> rejected\n            </div>\n          </div>\n        </div>\n\n        <div className=\"bg-white rounded-lg shadow p-6\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-sm font-medium text-gray-600\">User Engagement</p>\n              <p className=\"text-2xl font-semibold text-gray-900\">{stats.totalUsers}</p>\n            </div>\n            <div className=\"p-3 bg-green-100 rounded-full\">\n              <Users className=\"h-6 w-6 text-green-600\" />\n            </div>\n          </div>\n          <div className=\"mt-4\">\n            <p className=\"text-sm text-gray-600\">\n              {userEngagement.totalActiveUsers} active users ({Math.round((userEngagement.totalActiveUsers / stats.totalUsers) * 100)}%)\n            </p>\n          </div>\n        </div>\n\n        <div className=\"bg-white rounded-lg shadow p-6\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-sm font-medium text-gray-600\">Total Beans</p>\n              <p className=\"text-2xl font-semibold text-gray-900\">{stats.totalBeans}</p>\n            </div>\n            <div className=\"p-3 bg-yellow-100 rounded-full\">\n              <Award className=\"h-6 w-6 text-yellow-600\" />\n            </div>\n          </div>\n          <div className=\"mt-4\">\n            <p className=\"text-sm text-gray-600\">\n              {stats.avgBeansPerIdea} beans per idea\n            </p>\n          </div>\n        </div>\n\n        <div className=\"bg-white rounded-lg shadow p-6\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-sm font-medium text-gray-600\">Engagement Rate</p>\n              <p className=\"text-2xl font-semibold text-gray-900\">\n                {Math.round((stats.totalComments + stats.totalVotes) / stats.totalIdeas * 10) / 10}\n              </p>\n            </div>\n            <div className=\"p-3 bg-purple-100 rounded-full\">\n              <TrendingUp className=\"h-6 w-6 text-purple-600\" />\n            </div>\n          </div>\n          <div className=\"mt-4 flex items-center justify-between text-sm\">\n            <span>{stats.totalComments} comments</span>\n            <span>{stats.totalVotes} votes</span>\n          </div>\n        </div>\n      </div>\n\n      {/* Category Distribution */}\n      <div className=\"bg-white rounded-lg shadow p-6\">\n        <div className=\"flex items-center justify-between mb-4\">\n          <h3 className=\"text-lg font-medium text-gray-900 flex items-center\">\n            <PieChart className=\"h-5 w-5 mr-2 text-indigo-600\" />\n            Category Distribution\n          </h3>\n          <button\n            onClick={downloadCategoryStats}\n            className=\"inline-flex items-center px-3 py-1 border border-gray-300 shadow-sm text-sm leading-4 font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n          >\n            <Download className=\"h-4 w-4 mr-1\" />\n            Download CSV\n          </button>\n        </div>\n        <div className=\"space-y-4\">\n          {Object.entries(categoryStats).map(([category, count]) => (\n            <div key={category}>\n              <div className=\"flex justify-between text-sm text-gray-600 mb-1\">\n                <span className=\"flex items-center\">\n                  <Target className=\"h-4 w-4 mr-2 text-indigo-600\" />\n                  {category}\n                </span>\n                <span className=\"font-medium\">{count} ideas</span>\n              </div>\n              <div className=\"w-full bg-gray-200 rounded-full h-2\">\n                <div\n                  className=\"bg-indigo-600 h-2 rounded-full\"\n                  style={{\n                    width: `${(count / stats.totalIdeas) * 100}%`\n                  }}\n                />\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n\n      {/* Monthly Trends */}\n      <div className=\"bg-white rounded-lg shadow p-6\">\n        <div className=\"flex items-center justify-between mb-4\">\n          <h3 className=\"text-lg font-medium text-gray-900 flex items-center\">\n            <TrendingUp className=\"h-5 w-5 mr-2 text-indigo-600\" />\n            Monthly Submissions\n          </h3>\n          <button\n            onClick={downloadMonthlyStats}\n            className=\"inline-flex items-center px-3 py-1 border border-gray-300 shadow-sm text-sm leading-4 font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n          >\n            <Download className=\"h-4 w-4 mr-1\" />\n            Download CSV\n          </button>\n        </div>\n        <div className=\"space-y-4\">\n          {Object.entries(monthlyStats).map(([month, count]) => (\n            <div key={month}>\n              <div className=\"flex justify-between text-sm text-gray-600 mb-1\">\n                <span className=\"flex items-center\">\n                  <Calendar className=\"h-4 w-4 mr-2 text-indigo-600\" />\n                  {month}\n                </span>\n                <span className=\"font-medium\">{count} ideas</span>\n              </div>\n              <div className=\"w-full bg-gray-200 rounded-full h-2\">\n                <div\n                  className=\"bg-indigo-600 h-2 rounded-full\"\n                  style={{\n                    width: `${(count / Math.max(...Object.values(monthlyStats))) * 100}%`\n                  }}\n                />\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n\n      {/* Top Contributors */}\n      <div className=\"bg-white rounded-lg shadow p-6\">\n        <div className=\"flex items-center justify-between mb-4\">\n          <h3 className=\"text-lg font-medium text-gray-900 flex items-center\">\n            <Star className=\"h-5 w-5 mr-2 text-indigo-600\" />\n            Top Contributors\n          </h3>\n        </div>\n        <div className=\"space-y-4\">\n          {userEngagement.mostActiveUsers.map((user, index) => (\n            <div key={user.id} className=\"flex items-center justify-between\">\n              <div className=\"flex items-center\">\n                <div className=\"flex-shrink-0\">\n                  <div className=\"h-10 w-10 rounded-full bg-indigo-100 flex items-center justify-center\">\n                    <Users className=\"h-5 w-5 text-indigo-600\" />\n                  </div>\n                </div>\n                <div className=\"ml-4\">\n                  <p className=\"text-sm font-medium text-gray-900\">{user.full_name || 'Anonymous'}</p>\n                  <p className=\"text-sm text-gray-500\">{user.email}</p>\n                </div>\n              </div>\n              <div className=\"flex items-center space-x-4\">\n                <div className=\"flex items-center text-sm text-gray-500\">\n                  <Lightbulb className=\"h-4 w-4 mr-1\" />\n                  {user.ideas?.[0]?.count || 0} ideas\n                </div>\n                <div className=\"flex items-center text-sm text-gray-500\">\n                  <MessageSquare className=\"h-4 w-4 mr-1\" />\n                  {user.comments?.[0]?.count || 0} comments\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n\n      {/* Export Data */}\n      <div className=\"flex justify-end\">\n        <button\n          onClick={downloadIdeasData}\n          className=\"inline-flex items-center px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n        >\n          <Download className=\"h-4 w-4 mr-2\" />\n          Export Full Data\n        </button>\n      </div>\n    </div>\n  );\n}","import React, { useState } from 'react';\nimport { Pencil, Save, X, Loader2, Mail, User, Building } from 'lucide-react';\nimport { useUsers, useUpdateUser } from '../../lib/api/users';\nimport { cn } from '../../lib/utils';\n\nexport function UserManagement() {\n  const { data: users, isLoading } = useUsers();\n  const { mutate: updateUser, isLoading: isUpdating } = useUpdateUser();\n  const [editingUser, setEditingUser] = useState<string | null>(null);\n  const [editForm, setEditForm] = useState({\n    full_name: '',\n    department: ''\n  });\n\n  const handleEdit = (user: any) => {\n    setEditingUser(user.id);\n    setEditForm({\n      full_name: user.full_name || '',\n      department: user.department || ''\n    });\n  };\n\n  const handleSave = async (userId: string) => {\n    try {\n      await updateUser({\n        id: userId,\n        ...editForm\n      });\n      setEditingUser(null);\n    } catch (error) {\n      console.error('Error updating user:', error);\n    }\n  };\n\n  const handleCancel = () => {\n    setEditingUser(null);\n    setEditForm({ full_name: '', department: '' });\n  };\n\n  if (isLoading) {\n    return (\n      <div className=\"flex justify-center items-center h-64\">\n        <Loader2 className=\"h-8 w-8 animate-spin text-indigo-600\" />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"bg-white shadow-md rounded-lg overflow-hidden\">\n      <div className=\"p-6\">\n        <h2 className=\"text-xl font-semibold text-gray-900 mb-6\">User Management</h2>\n        <div className=\"overflow-x-auto\">\n          <table className=\"min-w-full divide-y divide-gray-200\">\n            <thead className=\"bg-gray-50\">\n              <tr>\n                <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  User\n                </th>\n                <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Department\n                </th>\n                <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Ideas\n                </th>\n                <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Comments\n                </th>\n                <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Actions\n                </th>\n              </tr>\n            </thead>\n            <tbody className=\"bg-white divide-y divide-gray-200\">\n              {users?.map((user) => (\n                <tr key={user.id}>\n                  <td className=\"px-6 py-4 whitespace-nowrap\">\n                    {editingUser === user.id ? (\n                      <input\n                        type=\"text\"\n                        value={editForm.full_name}\n                        onChange={(e) => setEditForm({ ...editForm, full_name: e.target.value })}\n                        className=\"block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm\"\n                      />\n                    ) : (\n                      <div className=\"flex items-center\">\n                        <div className=\"flex-shrink-0 h-10 w-10\">\n                          <div className=\"h-10 w-10 rounded-full bg-indigo-100 flex items-center justify-center\">\n                            <User className=\"h-6 w-6 text-indigo-600\" />\n                          </div>\n                        </div>\n                        <div className=\"ml-4\">\n                          <div className=\"text-sm font-medium text-gray-900\">\n                            {user.full_name || 'Unnamed User'}\n                          </div>\n                          <div className=\"text-sm text-gray-500 flex items-center\">\n                            <Mail className=\"h-3 w-3 mr-1\" />\n                            {user.email}\n                          </div>\n                        </div>\n                      </div>\n                    )}\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap\">\n                    {editingUser === user.id ? (\n                      <input\n                        type=\"text\"\n                        value={editForm.department}\n                        onChange={(e) => setEditForm({ ...editForm, department: e.target.value })}\n                        className=\"block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm\"\n                      />\n                    ) : (\n                      <div className=\"flex items-center text-sm text-gray-900\">\n                        <Building className=\"h-4 w-4 mr-1 text-gray-400\" />\n                        {user.department || 'Not specified'}\n                      </div>\n                    )}\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                    {user.ideas?.[0]?.count || 0}\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                    {user.comments?.[0]?.count || 0}\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-right text-sm font-medium\">\n                    {editingUser === user.id ? (\n                      <div className=\"flex items-center space-x-2\">\n                        <button\n                          onClick={() => handleSave(user.id)}\n                          disabled={isUpdating}\n                          className={cn(\n                            \"text-green-600 hover:text-green-900\",\n                            isUpdating && \"opacity-50 cursor-not-allowed\"\n                          )}\n                        >\n                          <Save className=\"h-4 w-4\" />\n                        </button>\n                        <button\n                          onClick={handleCancel}\n                          className=\"text-gray-600 hover:text-gray-900\"\n                        >\n                          <X className=\"h-4 w-4\" />\n                        </button>\n                      </div>\n                    ) : (\n                      <button\n                        onClick={() => handleEdit(user)}\n                        className=\"text-indigo-600 hover:text-indigo-900\"\n                      >\n                        <Pencil className=\"h-4 w-4\" />\n                      </button>\n                    )}\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  );\n}","import { useMutation, useQuery, useQueryClient } from '@tanstack/react-query';\nimport { supabase } from '../supabase';\nimport { Database } from '../database.types';\n\ntype BeanAward = Database['public']['Tables']['bean_awards']['Row'];\ntype NewBeanAward = Database['public']['Tables']['bean_awards']['Insert'];\n\nexport function useBeanAwards(ideaId: string | null) {\n  return useQuery({\n    queryKey: ['bean-awards', ideaId],\n    queryFn: async () => {\n      if (!ideaId) return [];\n\n      const { data, error } = await supabase\n        .from('bean_awards')\n        .select(`\n          *,\n          awarded_by:profiles(*)\n        `)\n        .eq('idea_id', ideaId)\n        .order('created_at', { ascending: false });\n\n      if (error) throw error;\n      return data;\n    },\n    enabled: !!ideaId,\n  });\n}\n\nexport function useAwardBeans() {\n  const queryClient = useQueryClient();\n\n  return useMutation({\n    mutationFn: async (award: NewBeanAward) => {\n      const { data, error } = await supabase\n        .from('bean_awards')\n        .insert(award)\n        .select()\n        .single();\n\n      if (error) throw error;\n      return data;\n    },\n    onSuccess: (_, variables) => {\n      queryClient.invalidateQueries({ queryKey: ['bean-awards', variables.idea_id] });\n      queryClient.invalidateQueries({ queryKey: ['ideas'] });\n    },\n  });\n}","import React, { useState } from 'react';\nimport { useIdeas, useEditIdea } from '../../lib/api/ideas';\nimport { useAwardBeans, useBeanAwards } from '../../lib/api/beans';\nimport { useAuth } from '../../lib/auth';\nimport { cn } from '../../lib/utils';\nimport { \n  Award, \n  CheckCircle, \n  XCircle, \n  Loader2, \n  Eye, \n  EyeOff,\n  History,\n  MessageSquare,\n  ThumbsUp,\n  ThumbsDown,\n  User,\n  Calendar,\n  Tag,\n  Link as LinkIcon,\n  Users,\n  FileText,\n  Clock,\n  Search,\n  Filter,\n  SlidersHorizontal,\n  Lightbulb,\n  FileCheck,\n  FileX,\n  Medal,\n  Star,\n  Eye as EyeIcon,\n  EyeOff as EyeOffIcon,\n  Info,\n  Trash2,\n  Edit,\n  MoreHorizontal,\n  Sparkles,\n  BrainCircuit\n} from 'lucide-react';\n\nexport function IdeaManagement() {\n  const { user } = useAuth();\n  const { data: ideas, isLoading } = useIdeas();\n  const { mutate: editIdea } = useEditIdea();\n  const { mutate: awardBeans } = useAwardBeans();\n  const [selectedIdea, setSelectedIdea] = useState<any | null>(null);\n  const [beansAmount, setBeansAmount] = useState<number>(0);\n  const [awardNote, setAwardNote] = useState('');\n  const [showHistory, setShowHistory] = useState(false);\n  const { data: beanAwards } = useBeanAwards(selectedIdea?.id);\n  const [statusNote, setStatusNote] = useState('');\n  const [showStatusModal, setShowStatusModal] = useState<{\n    ideaId: string;\n    status: 'approved' | 'rejected';\n  } | null>(null);\n  const [viewingIdea, setViewingIdea] = useState<any | null>(null);\n\n  const handleStatusChange = async (ideaId: string, status: 'approved' | 'rejected', note: string) => {\n    if (!user) return;\n\n    if (!note.trim()) {\n      alert('Please provide a note for the status change.');\n      return;\n    }\n\n    await editIdea({\n      id: ideaId,\n      updates: {\n        status,\n        feedback: note,\n        feedback_by: user.id,\n        feedback_at: new Date().toISOString()\n      },\n      editorId: user.id\n    });\n\n    setShowStatusModal(null);\n    setStatusNote('');\n  };\n\n  const handleVisibilityToggle = async (ideaId: string, hidden: boolean) => {\n    if (!user) return;\n\n    await editIdea({\n      id: ideaId,\n      updates: { hidden },\n      editorId: user.id\n    });\n  };\n\n  const handleBeansAward = async () => {\n    if (!user || !selectedIdea) return;\n\n    if (beansAmount <= 0) {\n      alert('Please enter a valid number of beans.');\n      return;\n    }\n\n    if (!awardNote.trim()) {\n      alert('Please provide a note for the beans award.');\n      return;\n    }\n\n    await awardBeans({\n      idea_id: selectedIdea.id,\n      awarded_by: user.id,\n      beans_amount: beansAmount,\n      note: awardNote.trim()\n    });\n\n    setBeansAmount(0);\n    setAwardNote('');\n    setSelectedIdea(null);\n  };\n\n  const handleViewIdea = (idea: any) => {\n    setViewingIdea(idea);\n  };\n\n  if (isLoading) {\n    return (\n      <div className=\"flex justify-center items-center h-64\">\n        <Loader2 className=\"h-8 w-8 animate-spin text-indigo-600\" />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"bg-white shadow-md rounded-lg overflow-hidden\">\n        <div className=\"p-6\">\n          <h2 className=\"text-xl font-semibold text-gray-900 mb-6\">Idea Management</h2>\n          <div className=\"overflow-x-auto\">\n            <table className=\"min-w-full divide-y divide-gray-200\">\n              <thead className=\"bg-gray-50\">\n                <tr>\n                  <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Title\n                  </th>\n                  <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Category\n                  </th>\n                  <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Status\n                  </th>\n                  <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Beans\n                  </th>\n                  <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Actions\n                  </th>\n                </tr>\n              </thead>\n              <tbody className=\"bg-white divide-y divide-gray-200\">\n                {ideas?.map((idea) => (\n                  <tr key={idea.id} className={cn(idea.hidden && \"bg-gray-50\")}>\n                    <td className=\"px-6 py-4\">\n                      <div className=\"flex items-center\">\n                        <button\n                          onClick={() => handleViewIdea(idea)}\n                          className=\"text-sm font-medium text-gray-900 hover:text-indigo-600\"\n                        >\n                          {idea.title}\n                        </button>\n                      </div>\n                    </td>\n                    <td className=\"px-6 py-4\">\n                      <div className=\"text-sm text-gray-500\">{idea.category}</div>\n                    </td>\n                    <td className=\"px-6 py-4\">\n                      <span className={cn(\n                        \"px-2 inline-flex text-xs leading-5 font-semibold rounded-full\",\n                        idea.status === 'approved' && \"bg-green-100 text-green-800\",\n                        idea.status === 'rejected' && \"bg-red-100 text-red-800\",\n                        idea.status === 'pending' && \"bg-yellow-100 text-yellow-800\"\n                      )}>\n                        {idea.status.charAt(0).toUpperCase() + idea.status.slice(1)}\n                      </span>\n                    </td>\n                    <td className=\"px-6 py-4\">\n                      <div className=\"text-sm text-gray-500\">{idea.beans_earned || 0}</div>\n                    </td>\n                    <td className=\"px-6 py-4 text-sm font-medium space-x-2\">\n                      {idea.status === 'pending' && (\n                        <>\n                          <button\n                            onClick={() => setShowStatusModal({ ideaId: idea.id, status: 'approved' })}\n                            className=\"text-green-600 hover:text-green-900\"\n                            title=\"Approve Idea\"\n                          >\n                            <FileCheck className=\"h-4 w-4\" />\n                          </button>\n                          <button\n                            onClick={() => setShowStatusModal({ ideaId: idea.id, status: 'rejected' })}\n                            className=\"text-red-600 hover:text-red-900\"\n                            title=\"Reject Idea\"\n                          >\n                            <FileX className=\"h-4 w-4\" />\n                          </button>\n                        </>\n                      )}\n                      <button\n                        onClick={() => setSelectedIdea(idea)}\n                        className=\"text-yellow-600 hover:text-yellow-900\"\n                        title=\"Award Beans\"\n                      >\n                        <Medal className=\"h-4 w-4\" />\n                      </button>\n                      <button\n                        onClick={() => handleVisibilityToggle(idea.id, !idea.hidden)}\n                        className={cn(\n                          \"hover:text-gray-900\",\n                          idea.hidden ? \"text-red-600\" : \"text-gray-600\"\n                        )}\n                        title={idea.hidden ? \"Show Idea\" : \"Hide Idea\"}\n                      >\n                        {idea.hidden ? (\n                          <EyeOffIcon className=\"h-4 w-4\" />\n                        ) : (\n                          <EyeIcon className=\"h-4 w-4\" />\n                        )}\n                      </button>\n                      <button\n                        onClick={() => handleViewIdea(idea)}\n                        className=\"text-indigo-600 hover:text-indigo-900\"\n                        title=\"View Details\"\n                      >\n                        <Info className=\"h-4 w-4\" />\n                      </button>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n\n      {/* Status Change Modal */}\n      {showStatusModal && (\n        <div className=\"fixed inset-0 bg-gray-500 bg-opacity-75 flex items-center justify-center p-4 z-50\">\n          <div className=\"bg-white rounded-lg max-w-md w-full\">\n            <div className=\"p-6\">\n              <div className=\"flex items-start justify-between mb-4\">\n                <h2 className=\"text-xl font-semibold text-gray-900\">\n                  {showStatusModal.status === 'approved' ? 'Approve' : 'Reject'} Idea\n                </h2>\n                <button\n                  onClick={() => {\n                    setShowStatusModal(null);\n                    setStatusNote('');\n                  }}\n                  className=\"text-gray-400 hover:text-gray-500\"\n                >\n                  <XCircle className=\"h-6 w-6\" />\n                </button>\n              </div>\n\n              <div className=\"space-y-4\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700\">\n                    Feedback Note (Required)\n                  </label>\n                  <textarea\n                    value={statusNote}\n                    onChange={(e) => setStatusNote(e.target.value)}\n                    rows={4}\n                    className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm\"\n                    placeholder={`Explain why you're ${showStatusModal.status === 'approved' ? 'approving' : 'rejecting'} this idea...`}\n                  />\n                </div>\n\n                <div className=\"flex justify-end space-x-3\">\n                  <button\n                    onClick={() => {\n                      setShowStatusModal(null);\n                      setStatusNote('');\n                    }}\n                    className=\"px-4 py-2 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 bg-white hover:bg-gray-50\"\n                  >\n                    Cancel\n                  </button>\n                  <button\n                    onClick={() => handleStatusChange(showStatusModal.ideaId, showStatusModal.status, statusNote)}\n                    className={cn(\n                      \"inline-flex items-center px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white\",\n                      showStatusModal.status === 'approved'\n                        ? \"bg-green-600 hover:bg-green-700\"\n                        : \"bg-red-600 hover:bg-red-700\"\n                    )}\n                  >\n                    {showStatusModal.status === 'approved' ? (\n                      <>\n                        <CheckCircle className=\"h-4 w-4 mr-2\" />\n                        Approve\n                      </>\n                    ) : (\n                      <>\n                        <XCircle className=\"h-4 w-4 mr-2\" />\n                        Reject\n                      </>\n                    )}\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Award Beans Modal */}\n      {selectedIdea && (\n        <div className=\"fixed inset-0 bg-gray-500 bg-opacity-75 flex items-center justify-center p-4 z-50\">\n          <div className=\"bg-white rounded-lg max-w-2xl w-full max-h-[90vh] overflow-y-auto\">\n            <div className=\"p-6\">\n              <div className=\"flex items-start justify-between mb-4\">\n                <div>\n                  <h2 className=\"text-xl font-semibold text-gray-900\">Award Beans</h2>\n                  <p className=\"mt-1 text-sm text-gray-500\">{selectedIdea.title}</p>\n                </div>\n                <button\n                  onClick={() => {\n                    setSelectedIdea(null);\n                    setShowHistory(false);\n                  }}\n                  className=\"text-gray-400 hover:text-gray-500\"\n                >\n                  <XCircle className=\"h-6 w-6\" />\n                </button>\n              </div>\n\n              <div className=\"space-y-4\">\n                <div className=\"flex justify-end\">\n                  <button\n                    onClick={() => setShowHistory(!showHistory)}\n                    className=\"inline-flex items-center text-sm text-gray-500 hover:text-gray-700\"\n                  >\n                    <History className=\"h-4 w-4 mr-1\" />\n                    {showHistory ? 'Hide History' : 'Show History'}\n                  </button>\n                </div>\n\n                {showHistory && beanAwards && beanAwards.length > 0 && (\n                  <div className=\"bg-gray-50 rounded-lg p-4 mb-4\">\n                    <h3 className=\"text-sm font-medium text-gray-900 mb-2\">Award History</h3>\n                    <div className=\"space-y-3\">\n                      {beanAwards.map((award) => (\n                        <div key={award.id} className=\"text-sm\">\n                          <div className=\"flex justify-between text-gray-500\">\n                            <span>{award.awarded_by.full_name || 'Anonymous'}</span>\n                            <span>{new Date(award.created_at).toLocaleDateString()}</span>\n                          </div>\n                          <div className=\"flex items-center text-yellow-600 mt-1\">\n                            <Award className=\"h-4 w-4 mr-1\" />\n                            {award.beans_amount} beans\n                          </div>\n                          <p className=\"text-gray-600 mt-1\">{award.note}</p>\n                        </div>\n                      ))}\n                    </div>\n                  </div>\n                )}\n\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700\">\n                    Number of Beans\n                  </label>\n                  <input\n                    type=\"number\"\n                    min=\"0\"\n                    value={beansAmount}\n                    onChange={(e) => setBeansAmount(parseInt(e.target.value) || 0)}\n                    className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm\"\n                  />\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700\">\n                    Note\n                  </label>\n                  <textarea\n                    value={awardNote}\n                    onChange={(e) => setAwardNote(e.target.value)}\n                    rows={3}\n                    className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm\"\n                    placeholder=\"Explain why you're awarding these beans...\"\n                  />\n                </div>\n\n                <div className=\"flex justify-end space-x-3\">\n                  <button\n                    onClick={() => {\n                      setSelectedIdea(null);\n                      setShowHistory(false);\n                    }}\n                    className=\"px-4 py-2 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 bg-white hover:bg-gray-50\"\n                  >\n                    Cancel\n                  </button>\n                  <button\n                    onClick={handleBeansAward}\n                    className=\"inline-flex items-center px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700\"\n                  >\n                    <Award className=\"h-4 w-4 mr-2\" />\n                    Award Beans\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Idea Details Modal */}\n      {viewingIdea && (\n        <div className=\"fixed inset-0 bg-gray-500 bg-opacity-75 flex items-center justify-center p-4 z-50\">\n          <div className=\"bg-white rounded-lg max-w-2xl w-full max-h-[90vh] overflow-y-auto\">\n            <div className=\"p-6\">\n              <div className=\"flex items-start justify-between mb-4\">\n                <h2 className=\"text-xl font-semibold text-gray-900\">{viewingIdea.title}</h2>\n                <button\n                  onClick={() => setViewingIdea(null)}\n                  className=\"text-gray-400 hover:text-gray-500\"\n                >\n                  <XCircle className=\"h-6 w-6\" />\n                </button>\n              </div>\n              \n              <div className=\"space-y-6\">\n                <div>\n                  <h3 className=\"text-lg font-medium text-gray-900 mb-2\">Description</h3>\n                  <p className=\"text-gray-600\">{viewingIdea.description}</p>\n                </div>\n\n                {viewingIdea.feedback && (\n                  <div>\n                    <h3 className=\"text-lg font-medium text-gray-900 mb-2\">Feedback</h3>\n                    <div className=\"bg-gray-50 rounded-lg p-4\">\n                      <div className=\"flex items-center justify-between mb-2\">\n                        <div className=\"flex items-center\">\n                          <div className=\"h-6 w-6 rounded-full bg-indigo-100 flex items-center justify-center mr-2\">\n                            <User className=\"h-3 w-3 text-indigo-600\" />\n                          </div>\n                          <div>\n                            <span className=\"font-medium text-gray-900\">\n                              {viewingIdea.feedback_by?.full_name || 'Anonymous Admin'}\n                            </span>\n                            {viewingIdea.feedback_at && (\n                              <span className=\"text-sm text-gray-500 ml-2\">\n                                on {new Date(viewingIdea.feedback_at).toLocaleDateString()}\n                              </span>\n                            )}\n                          </div>\n                        </div>\n                      </div>\n                      <p className=\"text-gray-600\">{viewingIdea.feedback}</p>\n                    </div>\n                  </div>\n                )}\n\n                <div>\n                  <h3 className=\"text-lg font-medium text-gray-900 mb-2\">Details</h3>\n                  <dl className=\"grid grid-cols-1 gap-4 sm:grid-cols-2\">\n                    <div className=\"bg-gray-50 px-4 py-3 rounded-lg\">\n                      <dt className=\"text-sm font-medium text-gray-500\">Category</dt>\n                      <dd className=\"mt-1 text-sm text-gray-900\">{viewingIdea.category}</dd>\n                    </div>\n                    <div className=\"bg-gray-50 px-4 py-3 rounded-lg\">\n                      <dt className=\"text-sm font-medium text-gray-500\">Status</dt>\n                      <dd className=\"mt-1 text-sm text-gray-900\">{viewingIdea.status}</dd>\n                    </div>\n                    <div className=\"bg-gray-50 px-4 py-3 rounded-lg\">\n                      <dt className=\"text-sm font-medium text-gray-500\">Submitted By</dt>\n                      <dd className=\"mt-1 text-sm text-gray-900\">{viewingIdea.author?.full_name || 'Anonymous'}</dd>\n                    </div>\n                    <div className=\"bg-gray-50 px-4 py-3 rounded-lg\">\n                      <dt className=\"text-sm font-medium text-gray-500\">Submission Date</dt>\n                      <dd className=\"mt-1 text-sm text-gray-900\">{new Date(viewingIdea.created_at).toLocaleDateString()}</dd>\n                    </div>\n                  </dl>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}","import React, { useState, useRef } from 'react';\nimport { FileUp, Download, AlertCircle, CheckCircle, XCircle, Loader2 } from 'lucide-react';\nimport { useCreateIdea } from '../../lib/api/ideas';\nimport { useAuth } from '../../lib/auth';\nimport { cn } from '../../lib/utils';\nimport { supabase } from '../../lib/supabase';\n\ninterface ValidationError {\n  row: number;\n  errors: string[];\n}\n\ninterface ImportResults {\n  total: number;\n  success: number;\n  failed: number;\n}\n\n// Parse CSV while handling quoted values correctly\nfunction parseCSV(text: string): string[][] {\n  const rows: string[][] = [];\n  let currentRow: string[] = [];\n  let currentValue = '';\n  let insideQuotes = false;\n\n  for (let i = 0; i < text.length; i++) {\n    const char = text[i];\n    const nextChar = text[i + 1];\n\n    if (char === '\"') {\n      if (insideQuotes && nextChar === '\"') {\n        // Handle escaped quotes\n        currentValue += '\"';\n        i++; // Skip next quote\n      } else {\n        // Toggle quote state\n        insideQuotes = !insideQuotes;\n      }\n    } else if (char === ',' && !insideQuotes) {\n      // End of field\n      currentRow.push(currentValue.trim());\n      currentValue = '';\n    } else if (char === '\\n' && !insideQuotes) {\n      // End of row\n      currentRow.push(currentValue.trim());\n      if (currentRow.some(value => value)) { // Only add non-empty rows\n        rows.push(currentRow);\n      }\n      currentRow = [];\n      currentValue = '';\n    } else {\n      currentValue += char;\n    }\n  }\n\n  // Handle last row if any\n  if (currentValue || currentRow.length > 0) {\n    currentRow.push(currentValue.trim());\n    if (currentRow.some(value => value)) { // Only add non-empty rows\n      rows.push(currentRow);\n    }\n  }\n\n  return rows;\n}\n\nexport function IdeaImport() {\n  const { user } = useAuth();\n  const { mutate: createIdea } = useCreateIdea();\n  const [importing, setImporting] = useState(false);\n  const [validationErrors, setValidationErrors] = useState<ValidationError[]>([]);\n  const [importResults, setImportResults] = useState<ImportResults | null>(null);\n  const fileInputRef = useRef<HTMLInputElement>(null);\n\n  const downloadTemplate = () => {\n    const template = [\n      'title,description,category,status,author_email,contributor_emails,resource_links',\n      '\"Example Idea\",\"This is a description with, commas\",\"Lammas - Accelerator & Native Apps\",\"pending\",\"author@kipi.ai\",\"contributor1@kipi.ai,contributor2@kipi.ai\",\"[{\"\"title\"\":\"\"Documentation\"\",\"\"url\"\":\"\"https://example.com\"\"}]\"'\n    ].join('\\n');\n\n    const blob = new Blob([template], { type: 'text/csv' });\n    const url = URL.createObjectURL(blob);\n    const link = document.createElement('a');\n    link.href = url;\n    link.download = 'ideas_import_template.csv';\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n    URL.revokeObjectURL(url);\n  };\n\n  const validateRow = async (values: string[], rowIndex: number) => {\n    const errors: string[] = [];\n    \n    try {\n      const [title, description, category, status, authorEmail, contributorEmails, resourceLinks] = values;\n\n      // Required fields\n      if (!title?.trim()) errors.push('Title is required');\n      if (!description?.trim()) errors.push('Description is required');\n      if (!category?.trim()) errors.push('Category is required');\n      if (!authorEmail?.trim()) errors.push('Author email is required');\n\n      // Validate category\n      const validCategories = [\n        'Lammas - Accelerator & Native Apps',\n        'Technology COE - Reusable Assets/Enablers',\n        'Delivery - Process Improvement',\n        'Industry Solutions - Domain Expertise & Business Use Cases',\n        'Data Science',\n        'Learning & Development',\n        'Sales & Marketing',\n        'Operations, HR, CSM, ESM, etc.'\n      ];\n      if (!validCategories.includes(category?.trim())) {\n        errors.push('Invalid category');\n      }\n\n      // Validate status\n      const validStatuses = ['pending', 'approved', 'rejected'];\n      if (status && !validStatuses.includes(status.trim())) {\n        errors.push('Invalid status');\n      }\n\n      // Validate author email\n      if (authorEmail?.trim()) {\n        const { data: authorData, error: authorError } = await supabase\n          .from('profiles')\n          .select('id')\n          .eq('email', authorEmail.trim())\n          .maybeSingle();\n\n        if (authorError || !authorData) {\n          errors.push(`Author email ${authorEmail} not found`);\n        }\n      }\n\n      // Validate contributor emails\n      if (contributorEmails?.trim()) {\n        const emails = contributorEmails.split(',').map(email => email.trim()).filter(Boolean);\n        if (emails.length > 0) {\n          const { data: contributorsData, error: contributorsError } = await supabase\n            .from('profiles')\n            .select('id, email')\n            .in('email', emails);\n\n          if (contributorsError) {\n            errors.push('Error validating contributor emails');\n          } else {\n            const foundEmails = new Set(contributorsData?.map(c => c.email));\n            const missingEmails = emails.filter(email => !foundEmails.has(email));\n            if (missingEmails.length > 0) {\n              errors.push(`Contributors not found: ${missingEmails.join(', ')}`);\n            }\n          }\n        }\n      }\n\n      // Validate resource links\n      if (resourceLinks?.trim()) {\n        try {\n          const links = JSON.parse(resourceLinks);\n          if (!Array.isArray(links)) {\n            errors.push('Resource links must be an array');\n          } else {\n            const validLinks = links.every((link: any) => \n              typeof link === 'object' &&\n              typeof link.title === 'string' && \n              typeof link.url === 'string' &&\n              link.url.startsWith('http')\n            );\n            if (!validLinks) {\n              errors.push('Invalid resource links format');\n            }\n          }\n        } catch (error) {\n          errors.push('Invalid resource links JSON');\n        }\n      }\n    } catch (error) {\n      console.error('Validation error:', error);\n      errors.push('Failed to validate row');\n    }\n\n    return errors;\n  };\n\n  const handleFileUpload = async (event: React.ChangeEvent<HTMLInputElement>) => {\n    const file = event.target.files?.[0];\n    if (!file || !user) return;\n\n    setImporting(true);\n    setValidationErrors([]);\n    setImportResults(null);\n\n    try {\n      const text = await file.text();\n      const rows = parseCSV(text);\n      \n      if (rows.length < 2) {\n        throw new Error('File must contain a header row and at least one data row');\n      }\n\n      const headerRow = rows[0];\n      const expectedHeaders = ['title', 'description', 'category', 'status', 'author_email', 'contributor_emails', 'resource_links'];\n      \n      if (headerRow.length !== expectedHeaders.length || \n          !expectedHeaders.every((header, i) => headerRow[i].toLowerCase().trim() === header)) {\n        throw new Error('Invalid CSV format. Please use the template provided.');\n      }\n\n      const dataRows = rows.slice(1);\n\n      // Validate all rows\n      const validationPromises = dataRows.map((row, index) => validateRow(row, index));\n      const validationResults = await Promise.all(validationPromises);\n\n      const errors = validationResults\n        .map((errors, index) => errors.length > 0 ? { row: index + 1, errors } : null)\n        .filter((error): error is ValidationError => error !== null);\n\n      setValidationErrors(errors);\n\n      if (errors.length === 0) {\n        // Import ideas\n        let successCount = 0;\n        let failedCount = 0;\n\n        for (const row of dataRows) {\n          try {\n            const [title, description, category, status, authorEmail, contributorEmails, resourceLinks] = row;\n\n            // Get author ID\n            const { data: authorData } = await supabase\n              .from('profiles')\n              .select('id')\n              .eq('email', authorEmail.trim())\n              .single();\n\n            if (!authorData) throw new Error('Author not found');\n\n            // Create idea\n            await createIdea({\n              title: title.trim(),\n              description: description.trim(),\n              category: category.trim(),\n              status: status.trim() || 'pending',\n              author_id: authorData.id,\n              resource_links: resourceLinks ? JSON.parse(resourceLinks) : []\n            }, {\n              onSuccess: async (idea) => {\n                // Add contributors if any\n                if (contributorEmails?.trim()) {\n                  const emails = contributorEmails.split(',').map(email => email.trim()).filter(Boolean);\n                  if (emails.length > 0) {\n                    const { data: contributors } = await supabase\n                      .from('profiles')\n                      .select('id')\n                      .in('email', emails);\n\n                    if (contributors?.length) {\n                      await Promise.all(\n                        contributors.map(contributor =>\n                          supabase\n                            .from('idea_contributors')\n                            .insert({\n                              idea_id: idea.id,\n                              user_id: contributor.id\n                            })\n                        )\n                      );\n                    }\n                  }\n                }\n              }\n            });\n\n            successCount++;\n          } catch (error) {\n            console.error('Error importing idea:', error);\n            failedCount++;\n          }\n        }\n\n        setImportResults({\n          total: dataRows.length,\n          success: successCount,\n          failed: failedCount\n        });\n      }\n    } catch (error) {\n      console.error('Error processing file:', error);\n      setValidationErrors([{\n        row: 0,\n        errors: [(error as Error).message || 'Failed to process file. Please check the format.']\n      }]);\n    } finally {\n      setImporting(false);\n      if (fileInputRef.current) {\n        fileInputRef.current.value = '';\n      }\n    }\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"bg-white shadow rounded-lg p-6\">\n        <div className=\"mb-6\">\n          <h2 className=\"text-lg font-medium text-gray-900 mb-2\">Import Ideas</h2>\n          <p className=\"text-sm text-gray-500\">\n            Import ideas from a CSV file. Download the template below to ensure correct formatting.\n          </p>\n          <div className=\"mt-4 bg-blue-50 rounded-lg p-4\">\n            <h3 className=\"text-sm font-medium text-blue-800 mb-2\">CSV Format Instructions:</h3>\n            <ul className=\"list-disc pl-5 text-sm text-blue-700 space-y-1\">\n              <li>Basic fields: title, description, category, status, author_email</li>\n              <li>contributor_emails: Comma-separated list of contributor email addresses</li>\n              <li>resource_links: JSON array of objects with title and url properties</li>\n              <li>Example resource links: [{'\"title\":\"Documentation\",\"url\":\"https://example.com\"'}]</li>\n              <li>Use quotes for values containing commas</li>\n            </ul>\n          </div>\n        </div>\n\n        <div className=\"space-y-4\">\n          {/* Template Download */}\n          <div>\n            <button\n              onClick={downloadTemplate}\n              className=\"inline-flex items-center px-4 py-2 border border-gray-300 shadow-sm text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50\"\n            >\n              <Download className=\"h-4 w-4 mr-2\" />\n              Download Template\n            </button>\n          </div>\n\n          {/* File Upload */}\n          <div className=\"mt-4\">\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n              Upload CSV File\n            </label>\n            <div className=\"mt-1 flex justify-center px-6 pt-5 pb-6 border-2 border-gray-300 border-dashed rounded-md\">\n              <div className=\"space-y-1 text-center\">\n                <FileUp className=\"mx-auto h-12 w-12 text-gray-400\" />\n                <div className=\"flex text-sm text-gray-600\">\n                  <label\n                    htmlFor=\"file-upload\"\n                    className=\"relative cursor-pointer bg-white rounded-md font-medium text-indigo-600 hover:text-indigo-500 focus-within:outline-none focus-within:ring-2 focus-within:ring-offset-2 focus-within:ring-indigo-500\"\n                  >\n                    <span>Upload a file</span>\n                    <input\n                      id=\"file-upload\"\n                      ref={fileInputRef}\n                      type=\"file\"\n                      className=\"sr-only\"\n                      accept=\".csv\"\n                      onChange={handleFileUpload}\n                      disabled={importing}\n                    />\n                  </label>\n                  <p className=\"pl-1\">or drag and drop</p>\n                </div>\n                <p className=\"text-xs text-gray-500\">\n                  CSV files only\n                </p>\n              </div>\n            </div>\n          </div>\n\n          {/* Validation Errors */}\n          {validationErrors.length > 0 && (\n            <div className=\"mt-4 p-4 bg-red-50 rounded-md\">\n              <div className=\"flex\">\n                <AlertCircle className=\"h-5 w-5 text-red-400 mr-2\" />\n                <div>\n                  <h3 className=\"text-sm font-medium text-red-800\">\n                    Validation errors found\n                  </h3>\n                  <div className=\"mt-2 text-sm text-red-700\">\n                    <ul className=\"list-disc pl-5 space-y-1\">\n                      {validationErrors.map((error, index) => (\n                        <li key={index}>\n                          {error.row === 0 ? 'File error' : `Row ${error.row}`}: {error.errors.join(', ')}\n                        </li>\n                      ))}\n                    </ul>\n                  </div>\n                </div>\n              </div>\n            </div>\n          )}\n\n          {/* Import Status */}\n          {importing && (\n            <div className=\"mt-4 p-4 bg-blue-50 rounded-md\">\n              <div className=\"flex items-center\">\n                <Loader2 className=\"h-5 w-5 text-blue-400 animate-spin mr-2\" />\n                <p className=\"text-sm text-blue-700\">\n                  Importing ideas... Please wait.\n                </p>\n              </div>\n            </div>\n          )}\n\n          {/* Import Results */}\n          {importResults && (\n            <div className={cn(\n              \"mt-4 p-4 rounded-md\",\n              importResults.failed === 0 ? \"bg-green-50\" : \"bg-yellow-50\"\n            )}>\n              <div className=\"flex\">\n                {importResults.failed === 0 ? (\n                  <CheckCircle className=\"h-5 w-5 text-green-400 mr-2\" />\n                ) : (\n                  <XCircle className=\"h-5 w-5 text-yellow-400 mr-2\" />\n                )}\n                <div>\n                  <h3 className={cn(\n                    \"text-sm font-medium\",\n                    importResults.failed === 0 ? \"text-green-800\" : \"text-yellow-800\"\n                  )}>\n                    Import completed\n                  </h3>\n                  <div className=\"mt-2 text-sm\">\n                    <p className={importResults.failed === 0 ? \"text-green-700\" : \"text-yellow-700\"}>\n                      Successfully imported {importResults.success} of {importResults.total} ideas.\n                      {importResults.failed > 0 && ` Failed to import ${importResults.failed} ideas.`}\n                    </p>\n                  </div>\n                </div>\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}","import React, { useState } from 'react';\nimport { Analytics } from '../components/admin/Analytics';\nimport { UserManagement } from '../components/admin/UserManagement';\nimport { IdeaManagement } from '../components/admin/IdeaManagement';\nimport { IdeaImport } from '../components/admin/IdeaImport';\nimport { cn } from '../lib/utils';\nimport { BarChart3, Users, Settings, FileUp } from 'lucide-react';\n\nconst tabs = [\n  { id: 'ideas', name: 'Idea Management', icon: Settings },\n  { id: 'analytics', name: 'Analytics', icon: BarChart3 },\n  { id: 'users', name: 'User Management', icon: Users },\n  { id: 'import', name: 'Import Ideas', icon: FileUp }\n] as const;\n\ntype TabId = typeof tabs[number]['id'];\n\nexport function AdminPage() {\n  const [currentTab, setCurrentTab] = useState<TabId>('ideas');\n\n  return (\n    <div className=\"py-8\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        {/* Tab Navigation */}\n        <div className=\"mb-8\">\n          <div className=\"sm:hidden\">\n            <select\n              value={currentTab}\n              onChange={(e) => setCurrentTab(e.target.value as TabId)}\n              className=\"block w-full rounded-md border-gray-300 py-2 pl-3 pr-10 text-base focus:border-indigo-500 focus:outline-none focus:ring-indigo-500 sm:text-sm\"\n            >\n              {tabs.map((tab) => (\n                <option key={tab.id} value={tab.id}>\n                  {tab.name}\n                </option>\n              ))}\n            </select>\n          </div>\n          <div className=\"hidden sm:block\">\n            <div className=\"border-b border-gray-200\">\n              <nav className=\"-mb-px flex space-x-8\" aria-label=\"Tabs\">\n                {tabs.map((tab) => {\n                  const Icon = tab.icon;\n                  return (\n                    <button\n                      key={tab.id}\n                      onClick={() => setCurrentTab(tab.id)}\n                      className={cn(\n                        currentTab === tab.id\n                          ? 'border-indigo-500 text-indigo-600'\n                          : 'border-transparent text-gray-500 hover:border-gray-300 hover:text-gray-700',\n                        'group inline-flex items-center py-4 px-1 border-b-2 font-medium text-sm'\n                      )}\n                    >\n                      <Icon className={cn(\n                        'mr-2 h-5 w-5',\n                        currentTab === tab.id\n                          ? 'text-indigo-500'\n                          : 'text-gray-400 group-hover:text-gray-500'\n                      )} />\n                      {tab.name}\n                    </button>\n                  );\n                })}\n              </nav>\n            </div>\n          </div>\n        </div>\n\n        {/* Tab Content */}\n        <div>\n          {currentTab === 'analytics' && <Analytics />}\n          {currentTab === 'users' && <UserManagement />}\n          {currentTab === 'ideas' && <IdeaManagement />}\n          {currentTab === 'import' && <IdeaImport />}\n        </div>\n      </div>\n    </div>\n  );\n}","// Collection of DiceBear Dylan style avatars\nexport const avatars = [\n  {\n    id: 'innovator',\n    url: 'https://api.dicebear.com/7.x/fun-emoji/svg?seed=innovator&backgroundColor=4f46e5',\n    label: 'Innovator'\n  },\n  {\n    id: 'creator',\n    url: 'https://api.dicebear.com/7.x/fun-emoji/svg?seed=creator&backgroundColor=3b82f6',\n    label: 'Creator'\n  },\n  {\n    id: 'thinker',\n    url: 'https://api.dicebear.com/7.x/fun-emoji/svg?seed=thinker&backgroundColor=22c55e',\n    label: 'Thinker'\n  },\n  {\n    id: 'visionary',\n    url: 'https://api.dicebear.com/7.x/fun-emoji/svg?seed=visionary&backgroundColor=a855f7',\n    label: 'Visionary'\n  },\n  {\n    id: 'explorer',\n    url: 'https://api.dicebear.com/7.x/fun-emoji/svg?seed=explorer&backgroundColor=ec4899',\n    label: 'Explorer'\n  },\n  {\n    id: 'builder',\n    url: 'https://api.dicebear.com/7.x/fun-emoji/svg?seed=builder&backgroundColor=eab308',\n    label: 'Builder'\n  },\n  {\n    id: 'scientist',\n    url: 'https://api.dicebear.com/7.x/fun-emoji/svg?seed=scientist&backgroundColor=ef4444',\n    label: 'Scientist'\n  },\n  {\n    id: 'artist',\n    url: 'https://api.dicebear.com/7.x/fun-emoji/svg?seed=artist&backgroundColor=f97316',\n    label: 'Artist'\n  }\n];","import React from 'react';\nimport { Check } from 'lucide-react';\nimport { avatars } from '../../lib/avatars';\nimport { cn } from '../../lib/utils';\n\ninterface AvatarSelectorProps {\n  selectedAvatar: string;\n  onSelect: (avatar: string) => void;\n}\n\nexport function AvatarSelector({ selectedAvatar, onSelect }: AvatarSelectorProps) {\n  return (\n    <div className=\"grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 gap-4\">\n      {avatars.map((avatar) => (\n        <button\n          key={avatar.id}\n          onClick={() => onSelect(avatar.url)}\n          className={cn(\n            \"relative aspect-square rounded-lg overflow-hidden group transition-all duration-300 hover:scale-105\",\n            \"border-2\",\n            selectedAvatar === avatar.url\n              ? \"border-indigo-500 ring-2 ring-indigo-500 ring-offset-2\"\n              : \"border-gray-200 hover:border-indigo-200\"\n          )}\n        >\n          <img\n            src={avatar.url}\n            alt={avatar.label}\n            className=\"w-full h-full object-cover bg-white\"\n          />\n          <div className={cn(\n            \"absolute inset-0 flex items-center justify-center bg-black/50 transition-opacity\",\n            selectedAvatar === avatar.url ? \"opacity-0\" : \"opacity-0 group-hover:opacity-100\"\n          )}>\n            <p className=\"text-white text-sm font-medium\">{avatar.label}</p>\n          </div>\n          {selectedAvatar === avatar.url && (\n            <div className=\"absolute top-2 right-2 bg-indigo-500 rounded-full p-1\">\n              <Check className=\"h-4 w-4 text-white\" />\n            </div>\n          )}\n        </button>\n      ))}\n    </div>\n  );\n}","import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { User, Mail, Building, Save, Loader2 } from 'lucide-react';\nimport { useAuth } from '../lib/auth';\nimport { useProfile, useUpdateUser } from '../lib/api/users';\nimport { cn } from '../lib/utils';\nimport { AvatarSelector } from '../components/profile/AvatarSelector';\n\nexport function ProfilePage() {\n  const navigate = useNavigate();\n  const { user } = useAuth();\n  const { data: profile, isLoading: profileLoading } = useProfile(user?.id || '');\n  const { mutate: updateUser, isLoading: updateLoading } = useUpdateUser();\n  const [formData, setFormData] = useState({\n    full_name: '',\n    department: '',\n    avatar_url: ''\n  });\n  const [error, setError] = useState<string | null>(null);\n  const [success, setSuccess] = useState(false);\n\n  useEffect(() => {\n    if (profile) {\n      setFormData({\n        full_name: profile.full_name || '',\n        department: profile.department || '',\n        avatar_url: profile.avatar_url || ''\n      });\n    }\n  }, [profile]);\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    if (!user) return;\n\n    try {\n      setError(null);\n      setSuccess(false);\n\n      await updateUser({\n        id: user.id,\n        ...formData\n      });\n\n      setSuccess(true);\n    } catch (err) {\n      console.error('Error updating profile:', err);\n      setError('Failed to update profile. Please try again.');\n    }\n  };\n\n  if (profileLoading) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center\">\n        <div className=\"flex flex-col items-center space-y-4\">\n          <Loader2 className=\"h-8 w-8 animate-spin text-indigo-600\" />\n          <p className=\"text-sm text-gray-500\">Loading profile...</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"py-8\">\n      <div className=\"max-w-3xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"bg-white shadow-lg rounded-lg overflow-hidden\">\n          <div className=\"px-6 py-8\">\n            <div className=\"flex items-center space-x-4 mb-8\">\n              <div className=\"h-20 w-20 rounded-full overflow-hidden bg-indigo-100 flex items-center justify-center\">\n                {formData.avatar_url ? (\n                  <img\n                    src={formData.avatar_url}\n                    alt=\"Profile Avatar\"\n                    className=\"w-full h-full object-cover\"\n                  />\n                ) : (\n                  <User className=\"h-12 w-12 text-indigo-600\" />\n                )}\n              </div>\n              <div>\n                <h1 className=\"text-2xl font-bold text-gray-900\">Profile Settings</h1>\n                <p className=\"text-gray-600 flex items-center mt-1\">\n                  <Mail className=\"h-4 w-4 mr-2\" />\n                  {user?.email}\n                </p>\n              </div>\n            </div>\n\n            {error && (\n              <div className=\"mb-4 p-4 rounded-md bg-red-50\">\n                <p className=\"text-sm text-red-700\">{error}</p>\n              </div>\n            )}\n\n            {success && (\n              <div className=\"mb-4 p-4 rounded-md bg-green-50\">\n                <p className=\"text-sm text-green-700\">Profile updated successfully!</p>\n              </div>\n            )}\n\n            <form onSubmit={handleSubmit} className=\"space-y-6\">\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-4\">\n                  Choose Avatar\n                </label>\n                <AvatarSelector\n                  selectedAvatar={formData.avatar_url}\n                  onSelect={(url) => setFormData(prev => ({ ...prev, avatar_url: url }))}\n                />\n              </div>\n\n              <div>\n                <label htmlFor=\"full_name\" className=\"block text-sm font-medium text-gray-700\">\n                  Full Name\n                </label>\n                <div className=\"mt-1\">\n                  <input\n                    type=\"text\"\n                    id=\"full_name\"\n                    value={formData.full_name}\n                    onChange={(e) => setFormData(prev => ({ ...prev, full_name: e.target.value }))}\n                    className=\"block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm\"\n                    placeholder=\"Enter your full name\"\n                  />\n                </div>\n              </div>\n\n              <div>\n                <label htmlFor=\"department\" className=\"block text-sm font-medium text-gray-700\">\n                  Department\n                </label>\n                <div className=\"mt-1\">\n                  <input\n                    type=\"text\"\n                    id=\"department\"\n                    value={formData.department}\n                    onChange={(e) => setFormData(prev => ({ ...prev, department: e.target.value }))}\n                    className=\"block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm\"\n                    placeholder=\"Enter your department\"\n                  />\n                </div>\n              </div>\n\n              <div className=\"flex justify-end space-x-3\">\n                <button\n                  type=\"button\"\n                  onClick={() => navigate(-1)}\n                  className=\"px-4 py-2 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n                >\n                  Cancel\n                </button>\n                <button\n                  type=\"submit\"\n                  disabled={updateLoading}\n                  className={cn(\n                    \"inline-flex items-center px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white\",\n                    \"bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\",\n                    updateLoading && \"opacity-75 cursor-not-allowed\"\n                  )}\n                >\n                  {updateLoading ? (\n                    <>\n                      <Loader2 className=\"animate-spin h-4 w-4 mr-2\" />\n                      Saving...\n                    </>\n                  ) : (\n                    <>\n                      <Save className=\"h-4 w-4 mr-2\" />\n                      Save Changes\n                    </>\n                  )}\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}","import React, { useState } from 'react';\nimport { ChevronDown, ChevronUp } from 'lucide-react';\n\ninterface FAQ {\n  category: string;\n  questions: {\n    question: string;\n    answer: string;\n  }[];\n}\n\nconst faqs: FAQ[] = [\n  {\n    category: 'General Questions',\n    questions: [\n      {\n        question: 'What is Kipi Innovate?',\n        answer: 'Kipi Innovate is a platform designed to foster innovation within our organization. It allows employees to submit ideas, collaborate with others, and earn recognition for their contributions to organizational improvement.'\n      },\n      {\n        question: 'Why should I use Kipi Innovate?',\n        answer: 'Using Kipi Innovate gives you the opportunity to share your innovative ideas, contribute to organizational growth, collaborate with colleagues, and earn rewards through our beans system.'\n      }\n    ]\n  },\n  {\n    category: 'Idea Submission and Review',\n    questions: [\n      {\n        question: 'How do I submit an idea?',\n        answer: 'To submit an idea, navigate to the \"My Ideas\" section and click on the \"Submit New Idea\" button. Fill out the required information including title, description, and category, then submit for review.'\n      },\n      {\n        question: 'What happens after I submit an idea?',\n        answer: 'After submission, your idea goes through a review process by our evaluation team. You\\'ll receive notifications about status changes and any feedback provided.'\n      },\n      {\n        question: 'What criteria are used to evaluate ideas?',\n        answer: 'Ideas are evaluated based on innovation, feasibility, potential impact, alignment with organizational goals, and resource requirements.'\n      }\n    ]\n  },\n  {\n    category: 'Recognition and Rewards',\n    questions: [\n      {\n        question: 'How are contributions recognized?',\n        answer: 'Contributors earn beans for approved ideas and additional engagement. Top contributors are featured on the platform\\'s leaderboard and receive special recognition.'\n      },\n      {\n        question: 'What rewards can I redeem with Beans?',\n        answer: 'Beans can be redeemed for various rewards including company merchandise, extra time off, learning resources, and other special perks.'\n      }\n    ]\n  },\n  {\n    category: 'Implementation and Impact',\n    questions: [\n      {\n        question: 'How is an idea implemented after approval?',\n        answer: 'Approved ideas are assigned to relevant teams for implementation. The original contributor is often involved in the implementation process and can track progress.'\n      },\n      {\n        question: 'How is the impact of an implemented idea assessed?',\n        answer: 'We track various metrics depending on the idea type, including cost savings, efficiency improvements, user satisfaction, and other relevant KPIs.'\n      }\n    ]\n  },\n  {\n    category: 'Technical Support',\n    questions: [\n      {\n        question: 'Who do I contact if I face issues on the platform?',\n        answer: 'For technical support, please reach out to our support team through the Contact page or email support@kipi-innovate.com.'\n      },\n      {\n        question: 'Can I edit my idea after submission?',\n        answer: 'Yes, you can edit your idea while it\\'s in \"Pending\" status. Once the review process begins, you\\'ll need to contact support for any necessary changes.'\n      }\n    ]\n  }\n];\n\nexport function FAQPage() {\n  const [openCategories, setOpenCategories] = useState<string[]>([faqs[0].category]);\n  const [openQuestions, setOpenQuestions] = useState<string[]>([]);\n\n  const toggleCategory = (category: string) => {\n    setOpenCategories(prev =>\n      prev.includes(category)\n        ? prev.filter(c => c !== category)\n        : [...prev, category]\n    );\n  };\n\n  const toggleQuestion = (question: string) => {\n    setOpenQuestions(prev =>\n      prev.includes(question)\n        ? prev.filter(q => q !== question)\n        : [...prev, question]\n    );\n  };\n\n  return (\n    <div className=\"py-8\">\n      <div className=\"max-w-3xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"text-center mb-12\">\n          <h1 className=\"text-3xl font-bold text-gray-900\">Frequently Asked Questions</h1>\n          <p className=\"mt-4 text-lg text-gray-600\">\n            Find answers to common questions about using Kipi Innovate\n          </p>\n        </div>\n\n        <div className=\"space-y-6\">\n          {faqs.map((category) => (\n            <div\n              key={category.category}\n              className=\"bg-white shadow rounded-lg overflow-hidden\"\n            >\n              <button\n                className=\"w-full px-6 py-4 flex items-center justify-between bg-gray-50 hover:bg-gray-100 transition-colors\"\n                onClick={() => toggleCategory(category.category)}\n              >\n                <h2 className=\"text-lg font-semibold text-gray-900\">\n                  {category.category}\n                </h2>\n                {openCategories.includes(category.category) ? (\n                  <ChevronUp className=\"h-5 w-5 text-gray-500\" />\n                ) : (\n                  <ChevronDown className=\"h-5 w-5 text-gray-500\" />\n                )}\n              </button>\n\n              {openCategories.includes(category.category) && (\n                <div className=\"divide-y divide-gray-200\">\n                  {category.questions.map((faq) => (\n                    <div key={faq.question} className=\"px-6\">\n                      <button\n                        className=\"w-full py-4 flex items-center justify-between text-left\"\n                        onClick={() => toggleQuestion(faq.question)}\n                      >\n                        <h3 className=\"text-base font-medium text-gray-900\">\n                          {faq.question}\n                        </h3>\n                        {openQuestions.includes(faq.question) ? (\n                          <ChevronUp className=\"h-5 w-5 text-gray-500 flex-shrink-0\" />\n                        ) : (\n                          <ChevronDown className=\"h-5 w-5 text-gray-500 flex-shrink-0\" />\n                        )}\n                      </button>\n                      {openQuestions.includes(faq.question) && (\n                        <div className=\"pb-4\">\n                          <p className=\"text-gray-600\">{faq.answer}</p>\n                        </div>\n                      )}\n                    </div>\n                  ))}\n                </div>\n              )}\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}","import React from 'react';\nimport { Mail, MessageSquare } from 'lucide-react';\n\nexport function ContactPage() {\n  return (\n    <div className=\"py-8\">\n      <div className=\"max-w-3xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"text-center mb-12\">\n          <h1 className=\"text-3xl font-bold text-gray-900\">Contact Us</h1>\n          <p className=\"mt-4 text-lg text-gray-600\">\n            Get in touch with the TSC team for any questions or support\n          </p>\n        </div>\n\n        <div className=\"card p-8\">\n          <div className=\"text-center space-y-6\">\n            <MessageSquare className=\"h-12 w-12 text-indigo-600 mx-auto\" />\n            <p className=\"text-lg text-gray-600\">\n              Please reach out to the TSC team for more details or write to us at:\n            </p>\n            <div className=\"space-y-3\">\n              <a \n                href=\"mailto:dharman.d.joshi@kipi.ai\"\n                className=\"flex items-center justify-center text-indigo-600 hover:text-indigo-700 transition-colors\"\n              >\n                <Mail className=\"h-5 w-5 mr-2\" />\n                dharman.d.joshi@kipi.ai\n              </a>\n              <a \n                href=\"mailto:veeranjaneya.a.tiruveedhula@kipi.ai\"\n                className=\"flex items-center justify-center text-indigo-600 hover:text-indigo-700 transition-colors\"\n              >\n                <Mail className=\"h-5 w-5 mr-2\" />\n                veeranjaneya.a.tiruveedhula@kipi.ai\n              </a>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}","import React, { useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { Lightbulb, Mail, Lock, AlertCircle } from 'lucide-react';\nimport { useAuth } from '../../lib/auth';\nimport { cn } from '../../lib/utils';\n\nexport function LoginPage() {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n  const navigate = useNavigate();\n  const { signIn } = useAuth();\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    try {\n      setError('');\n      setLoading(true);\n      await signIn(email, password);\n      navigate('/');\n    } catch (err) {\n      setError('Invalid email or password');\n      console.error(err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen flex items-center justify-center bg-gradient-to-br from-indigo-50 via-white to-blue-50 py-12 px-4 sm:px-6 lg:px-8\">\n      <div className=\"max-w-md w-full\">\n        <div className=\"text-center\">\n          <div className=\"flex justify-center mb-6\">\n            <div className=\"relative\">\n              <Lightbulb className=\"h-12 w-12 text-indigo-600 animate-pulse\" />\n              <div className=\"absolute -top-1 -right-1 h-3 w-3 bg-yellow-400 rounded-full animate-ping\" />\n            </div>\n          </div>\n          <h2 className=\"text-3xl font-extrabold text-gray-900 mb-2\">\n            Welcome Back\n          </h2>\n          <p className=\"text-lg text-gray-600\">\n            Sign in to continue to Kipi Innovate\n          </p>\n        </div>\n\n        <div className=\"mt-8 bg-white py-8 px-4 shadow-2xl rounded-lg sm:px-10\">\n          <form className=\"space-y-6\" onSubmit={handleSubmit}>\n            {error && (\n              <div className=\"rounded-md bg-red-50 p-4\">\n                <div className=\"flex\">\n                  <AlertCircle className=\"h-5 w-5 text-red-400\" />\n                  <div className=\"ml-3\">\n                    <h3 className=\"text-sm font-medium text-red-800\">\n                      {error}\n                    </h3>\n                  </div>\n                </div>\n              </div>\n            )}\n\n            <div>\n              <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700\">\n                Email address\n              </label>\n              <div className=\"mt-1 relative\">\n                <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n                  <Mail className=\"h-5 w-5 text-gray-400\" />\n                </div>\n                <input\n                  id=\"email\"\n                  name=\"email\"\n                  type=\"email\"\n                  autoComplete=\"email\"\n                  required\n                  value={email}\n                  onChange={(e) => setEmail(e.target.value)}\n                  className=\"appearance-none block w-full pl-10 pr-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n                  placeholder=\"Enter your email\"\n                />\n              </div>\n            </div>\n\n            <div>\n              <label htmlFor=\"password\" className=\"block text-sm font-medium text-gray-700\">\n                Password\n              </label>\n              <div className=\"mt-1 relative\">\n                <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n                  <Lock className=\"h-5 w-5 text-gray-400\" />\n                </div>\n                <input\n                  id=\"password\"\n                  name=\"password\"\n                  type=\"password\"\n                  autoComplete=\"current-password\"\n                  required\n                  value={password}\n                  onChange={(e) => setPassword(e.target.value)}\n                  className=\"appearance-none block w-full pl-10 pr-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n                  placeholder=\"Enter your password\"\n                />\n              </div>\n            </div>\n\n            <div>\n              <button\n                type=\"submit\"\n                disabled={loading}\n                className={cn(\n                  \"w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white\",\n                  \"bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\",\n                  \"transition-all duration-200 transform hover:scale-[1.02]\",\n                  loading && \"opacity-75 cursor-not-allowed\"\n                )}\n              >\n                {loading ? (\n                  <div className=\"flex items-center\">\n                    <svg className=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n                      <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n                      <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n                    </svg>\n                    Signing in...\n                  </div>\n                ) : (\n                  'Sign in'\n                )}\n              </button>\n            </div>\n\n            <div className=\"text-center\">\n              <p className=\"text-sm text-gray-600\">\n                Don't have an account?{' '}\n                <Link\n                  to=\"/register\"\n                  className=\"font-medium text-indigo-600 hover:text-indigo-500 transition-colors\"\n                >\n                  Contact TSC team\n                </Link>\n              </p>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n}","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Lightbulb, Mail, MessageSquare } from 'lucide-react';\n\nexport function RegisterPage() {\n  return (\n    <div className=\"min-h-screen flex items-center justify-center bg-gradient-to-br from-indigo-50 via-white to-blue-50 py-12 px-4 sm:px-6 lg:px-8\">\n      <div className=\"max-w-md w-full\">\n        <div className=\"text-center\">\n          <div className=\"flex justify-center mb-6\">\n            <div className=\"relative\">\n              <Lightbulb className=\"h-12 w-12 text-indigo-600 animate-pulse\" />\n              <div className=\"absolute -top-1 -right-1 h-3 w-3 bg-yellow-400 rounded-full animate-ping\" />\n            </div>\n          </div>\n          <h2 className=\"text-3xl font-extrabold text-gray-900 mb-4\">\n            Join Kipi Innovate\n          </h2>\n          <p className=\"text-lg text-gray-600 mb-8\">\n            Contact the TSC team to get your account set up\n          </p>\n        </div>\n\n        <div className=\"bg-white py-8 px-4 shadow-2xl rounded-lg sm:px-10\">\n          <div className=\"text-center space-y-6\">\n            <div className=\"space-y-2\">\n              <p className=\"text-gray-700\">\n                Please reach out to one of our TSC team members:\n              </p>\n              <div className=\"space-y-4 mt-4\">\n                <a \n                  href=\"mailto:dharman.d.joshi@kipi.ai\"\n                  className=\"flex items-center justify-center text-indigo-600 hover:text-indigo-700 transition-colors group\"\n                >\n                  <Mail className=\"h-5 w-5 mr-2 group-hover:scale-110 transition-transform\" />\n                  <span className=\"border-b border-indigo-200 group-hover:border-indigo-600\">\n                    dharman.d.joshi@kipi.ai\n                  </span>\n                </a>\n                <a \n                  href=\"mailto:veeranjaneya.a.tiruveedhula@kipi.ai\"\n                  className=\"flex items-center justify-center text-indigo-600 hover:text-indigo-700 transition-colors group\"\n                >\n                  <Mail className=\"h-5 w-5 mr-2 group-hover:scale-110 transition-transform\" />\n                  <span className=\"border-b border-indigo-200 group-hover:border-indigo-600\">\n                    veeranjaneya.a.tiruveedhula@kipi.ai\n                  </span>\n                </a>\n              </div>\n            </div>\n\n            <div className=\"pt-6 border-t border-gray-200\">\n              <p className=\"text-sm text-gray-600\">\n                Already have an account?{' '}\n                <Link\n                  to=\"/login\"\n                  className=\"font-medium text-indigo-600 hover:text-indigo-500 transition-colors\"\n                >\n                  Sign in\n                </Link>\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}","import React, { useState } from 'react';\nimport { useIdeas } from '../lib/api/ideas';\nimport { useUsers } from '../lib/api/users';\nimport { Trophy, Medal, Award, Star, Crown, Users, Lightbulb, MessageSquare, ThumbsUp, Filter, Brain, Target, Calendar } from 'lucide-react';\nimport { cn } from '../lib/utils';\n\nconst timeRanges = ['All Time', 'This Year', 'This Month', 'This Week'] as const;\ntype TimeRange = typeof timeRanges[number];\n\nexport function LeaderboardPage() {\n  const { data: ideas } = useIdeas();\n  const { data: users } = useUsers();\n  const [selectedTimeRange, setSelectedTimeRange] = useState<TimeRange>('All Time');\n\n  // Filter ideas based on time range\n  const filterIdeasByTime = (ideas: any[]) => {\n    if (!ideas) return [];\n    const now = new Date();\n    \n    switch (selectedTimeRange) {\n      case 'This Week':\n        const weekAgo = new Date(now.getTime() - 7 * 24 * 60 * 60 * 1000);\n        return ideas.filter(idea => new Date(idea.created_at) >= weekAgo);\n      case 'This Month':\n        const monthAgo = new Date(now.getFullYear(), now.getMonth(), 1);\n        return ideas.filter(idea => new Date(idea.created_at) >= monthAgo);\n      case 'This Year':\n        const yearStart = new Date(now.getFullYear(), 0, 1);\n        return ideas.filter(idea => new Date(idea.created_at) >= yearStart);\n      default:\n        return ideas;\n    }\n  };\n\n  const filteredIdeas = filterIdeasByTime(ideas || []);\n\n  // Calculate user rankings\n  const userRankings = users?.map(user => {\n    const userIdeas = filteredIdeas.filter(idea => idea.author_id === user.id);\n    const totalBeans = userIdeas.reduce((sum, idea) => sum + (idea.beans_earned || 0), 0);\n    const totalVotes = userIdeas.reduce((sum, idea) => sum + (idea.votes?.length || 0), 0);\n    const totalComments = userIdeas.reduce((sum, idea) => sum + (idea.comments?.length || 0), 0);\n    const approvedIdeas = userIdeas.filter(idea => idea.status === 'approved').length;\n    \n    return {\n      id: user.id,\n      name: user.full_name || 'Anonymous',\n      email: user.email,\n      department: user.department,\n      ideasCount: userIdeas.length,\n      approvedIdeas,\n      totalBeans,\n      totalVotes,\n      totalComments,\n      score: totalBeans * 3 + approvedIdeas * 5 + totalVotes + totalComments\n    };\n  }).sort((a, b) => b.score - a.score) || [];\n\n  // Calculate category champions\n  const categoryChampions = Object.entries(\n    filteredIdeas.reduce((acc: Record<string, any[]>, idea) => {\n      if (!acc[idea.category]) acc[idea.category] = [];\n      acc[idea.category].push(idea);\n      return acc;\n    }, {})\n  ).map(([category, ideas]) => {\n    const topContributor = users?.find(user => \n      user.id === ideas.reduce((acc, idea) => {\n        const current = ideas.filter(i => i.author_id === idea.author_id).length;\n        const max = ideas.filter(i => i.author_id === acc).length;\n        return current > max ? idea.author_id : acc;\n      }, ideas[0]?.author_id)\n    );\n\n    return {\n      category,\n      ideasCount: ideas.length,\n      topContributor: topContributor?.full_name || 'Anonymous',\n      topContributorEmail: topContributor?.email,\n      totalBeans: ideas.reduce((sum, idea) => sum + (idea.beans_earned || 0), 0)\n    };\n  }).sort((a, b) => b.ideasCount - a.ideasCount);\n\n  const getPositionIcon = (position: number) => {\n    switch (position) {\n      case 0:\n        return <Crown className=\"h-6 w-6 text-yellow-500\" />;\n      case 1:\n        return <Medal className=\"h-6 w-6 text-gray-400\" />;\n      case 2:\n        return <Award className=\"h-6 w-6 text-amber-600\" />;\n      default:\n        return <Star className=\"h-6 w-6 text-indigo-400\" />;\n    }\n  };\n\n  return (\n    <div className=\"py-8\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        {/* Header */}\n        <div className=\"text-center mb-12\">\n          <Trophy className=\"h-12 w-12 text-yellow-500 mx-auto mb-4\" />\n          <h1 className=\"text-3xl font-bold text-gray-900 mb-2\">Innovation Champions</h1>\n          <p className=\"text-lg text-gray-600\">\n            Celebrating our top contributors and their impactful ideas\n          </p>\n        </div>\n\n        {/* Time Range Filter */}\n        <div className=\"flex justify-end mb-8\">\n          <div className=\"inline-flex rounded-md shadow-sm\">\n            {timeRanges.map((range) => (\n              <button\n                key={range}\n                onClick={() => setSelectedTimeRange(range)}\n                className={cn(\n                  \"relative inline-flex items-center px-4 py-2 border text-sm font-medium\",\n                  selectedTimeRange === range\n                    ? \"z-10 bg-indigo-50 border-indigo-500 text-indigo-600\"\n                    : \"border-gray-300 bg-white text-gray-500 hover:bg-gray-50\",\n                  \"first:rounded-l-md last:rounded-r-md\"\n                )}\n              >\n                {range}\n              </button>\n            ))}\n          </div>\n        </div>\n\n        {/* Top Contributors */}\n        <div className=\"mb-12\">\n          <h2 className=\"text-2xl font-bold text-gray-900 mb-6 flex items-center\">\n            <Users className=\"h-6 w-6 mr-2 text-indigo-600\" />\n            Top Contributors\n          </h2>\n          <div className=\"grid gap-6 md:grid-cols-2 lg:grid-cols-3\">\n            {userRankings.slice(0, 9).map((user, index) => (\n              <div\n                key={user.id}\n                className=\"bg-white rounded-lg shadow-md p-6 transform transition-all duration-300 hover:scale-105\"\n              >\n                <div className=\"flex items-start justify-between mb-4\">\n                  <div className=\"flex items-center\">\n                    <div className=\"flex-shrink-0\">\n                      {getPositionIcon(index)}\n                    </div>\n                    <div className=\"ml-3\">\n                      <p className=\"text-lg font-semibold text-gray-900\">{user.name}</p>\n                      <p className=\"text-sm text-gray-500\">{user.department || 'No Department'}</p>\n                    </div>\n                  </div>\n                  <div className=\"text-2xl font-bold text-indigo-600\">#{index + 1}</div>\n                </div>\n                <div className=\"grid grid-cols-2 gap-4 text-sm\">\n                  <div className=\"flex items-center\">\n                    <Lightbulb className=\"h-4 w-4 mr-1 text-blue-500\" />\n                    <span>{user.approvedIdeas} approved ideas</span>\n                  </div>\n                  <div className=\"flex items-center\">\n                    <Award className=\"h-4 w-4 mr-1 text-yellow-500\" />\n                    <span>{user.totalBeans} beans</span>\n                  </div>\n                  <div className=\"flex items-center\">\n                    <ThumbsUp className=\"h-4 w-4 mr-1 text-green-500\" />\n                    <span>{user.totalVotes} votes</span>\n                  </div>\n                  <div className=\"flex items-center\">\n                    <MessageSquare className=\"h-4 w-4 mr-1 text-purple-500\" />\n                    <span>{user.totalComments} comments</span>\n                  </div>\n                </div>\n                <div className=\"mt-4 pt-4 border-t border-gray-200\">\n                  <div className=\"flex justify-between items-center text-sm\">\n                    <span className=\"text-gray-500\">Total Score</span>\n                    <span className=\"font-semibold text-indigo-600\">{user.score} points</span>\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n\n        {/* Category Champions */}\n        <div>\n          <h2 className=\"text-2xl font-bold text-gray-900 mb-6 flex items-center\">\n            <Target className=\"h-6 w-6 mr-2 text-indigo-600\" />\n            Category Champions\n          </h2>\n          <div className=\"bg-white rounded-lg shadow-md overflow-hidden\">\n            <table className=\"min-w-full divide-y divide-gray-200\">\n              <thead className=\"bg-gray-50\">\n                <tr>\n                  <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Category\n                  </th>\n                  <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Top Contributor\n                  </th>\n                  <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Ideas\n                  </th>\n                  <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Beans Earned\n                  </th>\n                </tr>\n              </thead>\n              <tbody className=\"bg-white divide-y divide-gray-200\">\n                {categoryChampions.map((champion, index) => (\n                  <tr key={champion.category} className=\"hover:bg-gray-50\">\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <div className=\"flex items-center\">\n                        <Brain className=\"h-5 w-5 text-indigo-600 mr-2\" />\n                        <div className=\"text-sm font-medium text-gray-900\">\n                          {champion.category}\n                        </div>\n                      </div>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <div className=\"flex items-center\">\n                        {index < 3 && (\n                          <div className=\"flex-shrink-0 mr-2\">\n                            {getPositionIcon(index)}\n                          </div>\n                        )}\n                        <div>\n                          <div className=\"text-sm font-medium text-gray-900\">\n                            {champion.topContributor}\n                          </div>\n                          <div className=\"text-sm text-gray-500\">\n                            {champion.topContributorEmail}\n                          </div>\n                        </div>\n                      </div>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <div className=\"text-sm text-gray-900\">{champion.ideasCount} ideas</div>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <div className=\"flex items-center text-sm text-gray-900\">\n                        <Award className=\"h-4 w-4 mr-1 text-yellow-500\" />\n                        {champion.totalBeans}\n                      </div>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}","import React, { Suspense } from 'react';\nimport { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\nimport { QueryClient, QueryClientProvider } from '@tanstack/react-query';\nimport { ReactQueryDevtools } from '@tanstack/react-query-devtools';\nimport { AuthProvider, useAuth } from './lib/auth';\nimport { Header } from './components/layout/Header';\nimport { Footer } from './components/layout/Footer';\nimport { Loader2 } from 'lucide-react';\n\n// Import pages normally for now\nimport { HomePage } from './pages/HomePage';\nimport { BrowseIdeasPage } from './pages/BrowseIdeasPage';\nimport { MyIdeasPage } from './pages/MyIdeasPage';\nimport { SubmitIdeaPage } from './pages/SubmitIdeaPage';\nimport { AdminPage } from './pages/AdminPage';\nimport { ProfilePage } from './pages/ProfilePage';\nimport { FAQPage } from './pages/FAQPage';\nimport { ContactPage } from './pages/ContactPage';\nimport { LoginPage } from './pages/auth/LoginPage';\nimport { RegisterPage } from './pages/auth/RegisterPage';\nimport { LeaderboardPage } from './pages/LeaderboardPage';\n\nconst queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      staleTime: 1000 * 60 * 5, // Data is fresh for 5 minutes\n      cacheTime: 1000 * 60 * 30, // Cache persists for 30 minutes\n      refetchOnWindowFocus: false, // Don't refetch on window focus\n      retry: 1, // Only retry failed requests once\n    },\n  },\n});\n\nfunction LoadingSpinner() {\n  return (\n    <div className=\"min-h-screen flex items-center justify-center\">\n      <div className=\"flex flex-col items-center space-y-4\">\n        <Loader2 className=\"h-8 w-8 animate-spin text-indigo-600\" />\n        <p className=\"text-sm text-gray-500\">Loading...</p>\n      </div>\n    </div>\n  );\n}\n\nfunction ProtectedRoute({ children, adminOnly = false }: { children: React.ReactNode; adminOnly?: boolean }) {\n  const { user, loading } = useAuth();\n  const isAdmin = user?.email?.endsWith('@kipi.ai');\n\n  if (loading) {\n    return <LoadingSpinner />;\n  }\n\n  if (!user || (adminOnly && !isAdmin)) {\n    return <Navigate to=\"/login\" replace />;\n  }\n\n  return <>{children}</>;\n}\n\nfunction PublicRoute({ children }: { children: React.ReactNode }) {\n  const { user, loading } = useAuth();\n\n  if (loading) {\n    return <LoadingSpinner />;\n  }\n\n  if (user) {\n    return <Navigate to=\"/\" replace />;\n  }\n\n  return <>{children}</>;\n}\n\nfunction AppRoutes() {\n  const { user } = useAuth();\n  const isAdmin = user?.email?.endsWith('@kipi.ai');\n\n  return (\n    <div className=\"min-h-screen flex flex-col\">\n      <Header showAdminLink={isAdmin} />\n      <main className=\"flex-grow bg-gray-50\">\n        <Routes>\n          {/* Public Routes */}\n          <Route path=\"/\" element={<HomePage />} />\n          <Route path=\"/faq\" element={<FAQPage />} />\n          <Route path=\"/contact\" element={<ContactPage />} />\n          \n          {/* Protected Routes */}\n          <Route path=\"/leaderboard\" element={\n            <ProtectedRoute>\n              <LeaderboardPage />\n            </ProtectedRoute>\n          } />\n          <Route path=\"/browse\" element={\n            <ProtectedRoute>\n              <BrowseIdeasPage />\n            </ProtectedRoute>\n          } />\n          <Route path=\"/my-ideas\" element={\n            <ProtectedRoute>\n              <MyIdeasPage />\n            </ProtectedRoute>\n          } />\n          <Route path=\"/submit\" element={\n            <ProtectedRoute>\n              <SubmitIdeaPage />\n            </ProtectedRoute>\n          } />\n          <Route path=\"/profile\" element={\n            <ProtectedRoute>\n              <ProfilePage />\n            </ProtectedRoute>\n          } />\n          <Route path=\"/admin\" element={\n            <ProtectedRoute adminOnly>\n              <AdminPage />\n            </ProtectedRoute>\n          } />\n          \n          {/* Auth Routes */}\n          <Route path=\"/login\" element={\n            <PublicRoute>\n              <LoginPage />\n            </PublicRoute>\n          } />\n          <Route path=\"/register\" element={\n            <PublicRoute>\n              <RegisterPage />\n            </PublicRoute>\n          } />\n\n          {/* Catch all route */}\n          <Route path=\"*\" element={<Navigate to=\"/\" replace />} />\n        </Routes>\n      </main>\n      <Footer />\n    </div>\n  );\n}\n\nexport default function App() {\n  return (\n    <QueryClientProvider client={queryClient}>\n      <AuthProvider>\n        <Router>\n          <AppRoutes />\n        </Router>\n      </AuthProvider>\n      <ReactQueryDevtools initialIsOpen={false} />\n    </QueryClientProvider>\n  );\n}","import { StrictMode } from 'react';\nimport { createRoot } from 'react-dom/client';\nimport App from './App.tsx';\nimport './index.css';\n\ncreateRoot(document.getElementById('root')!).render(\n  <StrictMode>\n    <App />\n  </StrictMode>\n);\n"],"names":["m","require$$0","createRoot","supabaseUrl","supabaseAnonKey","supabase","createClient","AuthContext","createContext","AuthProvider","children","user","setUser","useState","loading","setLoading","useEffect","session","subscription","_event","signIn","email","password","error","signUp","signOut","jsx","useAuth","context","useContext","useProfile","userId","useQuery","data","newProfile","createError","useUsers","useUpdateUser","queryClient","useQueryClient","useMutation","id","updates","_","variables","useNotifications","useMarkNotificationAsRead","notificationId","useMarkAllNotificationsAsRead","cn","inputs","twMerge","clsx","NotificationDropdown","notifications","isLoading","markAsRead","markAllAsRead","isOpen","setIsOpen","React","dropdownRef","useRef","unreadCount","n","handleClickOutside","event","getNotificationIcon","type","MessageSquare","ThumbsUp","Award","FileCheck","FileX","Bell","handleNotificationClick","jsxs","Check","Loader2","notification","Link","_a","Header","showAdminLink","location","useLocation","navigate","useNavigate","showProfileMenu","setShowProfileMenu","scrolled","setScrolled","profile","isAdmin","navigation","authenticatedNavigation","allNavigation","handleScroll","handleLogout","Lightbulb","Sparkles","X","Menu","item","Plus","UserCircle","Fragment","LogOut","LogIn","Footer","STALE_TIME","CACHE_TIME","useIdeas","options","useCreateIdea","newIdea","useEditIdea","editorId","beforeIdea","fetchError","updatedIdea","updateError","logError","benefits","Users","Target","Bean","Zap","evaluationSteps","ClipboardList","Brain","Presentation","Medal","HomePage","ideas","userIdeas","idea","analytics","sum","acc","month","stats","CheckCircle","XCircle","Clock","engagementStats","TrendingUp","ArrowRight","stat","index","Icon","step","benefit","useVote","newVote","existingVote","useUnvote","ideaId","useComments","useCreateComment","newComment","categories","statuses","getCategoryColor","category","BrowseIdeasPage","ideasLoading","vote","unvote","selectedCategory","setSelectedCategory","selectedStatus","setSelectedStatus","searchQuery","setSearchQuery","selectedIdea","setSelectedIdea","setNewComment","createComment","comments","commentsLoading","filteredIdeas","categoryMatch","statusMatch","searchMatch","handleVoteToggle","i","v","handleCommentSubmit","e","getStatusColor","status","Search","categoryColor","hasVoted","_b","_c","Tag","_d","contributor","User","LinkIcon","link","comment","MyIdeasPage","myIdeas","SubmitIdeaPage","createIdea","formData","setFormData","setError","contributorEmail","setContributorEmail","contributorSearchResults","setContributorSearchResults","searchLoading","setSearchLoading","newLinkTitle","setNewLinkTitle","newLinkUrl","setNewLinkUrl","ShieldAlert","searchContributors","err","handleContributorSearch","addContributor","c","prev","removeContributor","addResourceLink","newLink","removeResourceLink","handleSubmit","Send","timeRanges","Analytics","users","selectedTimeRange","setSelectedTimeRange","now","weekAgo","monthAgo","yearStart","categoryStats","monthlyStats","userEngagement","a","b","downloadCSV","filename","csvContent","row","value","blob","url","downloadIdeasData","headers","csvData","downloadCategoryStats","count","downloadMonthlyStats","range","PieChart","Download","Calendar","Star","UserManagement","updateUser","isUpdating","editingUser","setEditingUser","editForm","setEditForm","handleEdit","handleSave","handleCancel","Mail","Building","Save","Pencil","useBeanAwards","useAwardBeans","award","IdeaManagement","editIdea","awardBeans","beansAmount","setBeansAmount","awardNote","setAwardNote","showHistory","setShowHistory","beanAwards","statusNote","setStatusNote","showStatusModal","setShowStatusModal","viewingIdea","setViewingIdea","handleStatusChange","note","handleVisibilityToggle","hidden","handleBeansAward","handleViewIdea","EyeOffIcon","EyeIcon","Info","History","parseCSV","text","rows","currentRow","currentValue","insideQuotes","char","nextChar","IdeaImport","importing","setImporting","validationErrors","setValidationErrors","importResults","setImportResults","fileInputRef","downloadTemplate","template","validateRow","values","rowIndex","errors","title","description","authorEmail","contributorEmails","resourceLinks","authorData","authorError","emails","contributorsData","contributorsError","foundEmails","missingEmails","links","handleFileUpload","file","headerRow","expectedHeaders","header","dataRows","validationPromises","successCount","failedCount","contributors","FileUp","AlertCircle","tabs","Settings","BarChart3","AdminPage","currentTab","setCurrentTab","tab","avatars","AvatarSelector","selectedAvatar","onSelect","avatar","ProfilePage","profileLoading","updateLoading","success","setSuccess","faqs","FAQPage","openCategories","setOpenCategories","openQuestions","setOpenQuestions","toggleCategory","toggleQuestion","question","q","ChevronUp","ChevronDown","faq","ContactPage","LoginPage","setEmail","setPassword","Lock","RegisterPage","LeaderboardPage","userRankings","totalBeans","totalVotes","totalComments","approvedIdeas","categoryChampions","topContributor","current","max","getPositionIcon","position","Crown","Trophy","champion","QueryClient","LoadingSpinner","ProtectedRoute","adminOnly","Navigate","PublicRoute","AppRoutes","Routes","Route","App","QueryClientProvider","Router","ReactQueryDevtools","StrictMode"],"mappings":"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","x_google_ignoreList":[0]}